<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fomalhaut🥝</title>
  
  
  <link href="https://qiqicsdn.github.io/atom.xml" rel="self"/>
  
  <link href="https://qiqicsdn.github.io/"/>
  <updated>2023-12-17T11:43:10.829Z</updated>
  <id>https://qiqicsdn.github.io/</id>
  
  <author>
    <name>Fomalhaut🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>List与String互转</title>
    <link href="https://qiqicsdn.github.io/posts/f6ce161d.html"/>
    <id>https://qiqicsdn.github.io/posts/f6ce161d.html</id>
    <published>2023-12-17T11:43:10.829Z</published>
    <updated>2023-12-17T11:43:10.829Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://www.jb51.net/program/287456fak.htm">https://www.jb51.net/program/287456fak.htm</a></p><h1>将List转换成String</h1><p>将一个Java集合List转换为String很简单，可以使用String.join()或StringBuilder等方法。下面是几个示例：</p><h2 id="使用String-joni-方法">使用String.joni()方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">joinedString</span> <span class="operator">=</span> String.join(<span class="string">&quot;, &quot;</span>, list);</span><br><span class="line">System.out.println(joinedString);  <span class="comment">// 输出: A, B, C</span></span><br></pre></td></tr></table></figure><p>**注意：以上是转换Java集合List为字符串的几种方法。需要注意的是，当集合中包含null值时，使用String.join()方法将会抛出NullPointerException异常，而使用StringBuilder或Java 8的Stream API则可以正确处理null值。 **</p><h2 id="使用StringBuilder">使用StringBuilder</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line"><span class="keyword">for</span> (String str : list) &#123;</span><br><span class="line">    sb.append(str);</span><br><span class="line">    sb.append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">sb.setLength(sb.length() - <span class="number">2</span>);  <span class="comment">// 删除最后一个逗号和空格</span></span><br><span class="line"><span class="type">String</span> <span class="variable">joinedString</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">System.out.println(joinedString);  <span class="comment">// 输出: A, B, C</span></span><br></pre></td></tr></table></figure><h2 id="使用Java8的Stream（推荐）">使用Java8的Stream（推荐）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">list.add(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">list.add(<span class="string">&quot;C&quot;</span>);</span><br><span class="line"><span class="type">String</span> <span class="variable">joinedString</span> <span class="operator">=</span> list.stream().collect(Collectors.joining(<span class="string">&quot;, &quot;</span>));</span><br><span class="line">System.out.println(joinedString);  <span class="comment">// 输出: A, B, C</span></span><br></pre></td></tr></table></figure><h1>将String转换成List</h1><p>将一个逗号分隔的字符串转换为Java集合List也很简单，可以使用String的split()方法或者使用Java 8的Stream API的splitAsStream()方法。下面是两个示例：</p><h2 id="使用String的split-方法">使用String的split()方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A, B, C&quot;</span>;</span><br><span class="line">List&lt;String&gt; list = Arrays.asList(str.split(<span class="string">&quot;\\s*,\\s*&quot;</span>));</span><br><span class="line">System.out.println(list);  <span class="comment">// 输出: [A, B, C]</span></span><br></pre></td></tr></table></figure><h2 id="使用Java8的Stream方法">使用Java8的Stream方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;A, B, C&quot;</span>;</span><br><span class="line">List&lt;String&gt; list = Pattern.compile(<span class="string">&quot;\\s*,\\s*&quot;</span>).splitAsStream(str).collect(Collectors.toList());</span><br><span class="line">System.out.println(list);  <span class="comment">// 输出: [A, B, C]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">List与String互转</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数组的删除与添加</title>
    <link href="https://qiqicsdn.github.io/posts/cf22e13d.html"/>
    <id>https://qiqicsdn.github.io/posts/cf22e13d.html</id>
    <published>2023-12-17T06:30:45.523Z</published>
    <updated>2023-12-17T06:30:45.523Z</updated>
    
    <content type="html"><![CDATA[<h1>删除末尾最后一个</h1><blockquote><p>pop() 方法用于删除并返回数组的最后一个元素。并把<a href="https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6&amp;spm=1001.2101.3001.7020">数组长度</a>减 1</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">arr</span> <span class="operator">=</span> [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">arr.pop(); <span class="comment">//删除最后一个元素并且返回它删除的元素的值 =&gt; f</span></span><br><span class="line">arr.length; <span class="comment">//此时数组长度5</span></span><br><span class="line">arr; <span class="comment">//[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;]</span></span><br></pre></td></tr></table></figure><h1>末尾添加一个或多个元素</h1><blockquote><p>push() 方法可向数组的末尾添加一个或多个元素，并返回新的长度。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">arr</span> <span class="operator">=</span> [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">arr.push(<span class="string">&#x27;g&#x27;</span>); <span class="comment">//向数组末尾push进一个新的元素,它直接修改 arrayObject，而不是创建一个新的数组</span></span><br><span class="line">arr.length; <span class="comment">//此时arr长度7</span></span><br><span class="line">arr; <span class="comment">//[&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;e&#x27;,&#x27;f&#x27;,&#x27;g&#x27;]</span></span><br></pre></td></tr></table></figure><h1>删除第一个元素</h1><blockquote><p>shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//该方法不创建新数组，而是直接修改原有的 arrayObject</span></span><br><span class="line"><span class="type">var</span> <span class="variable">arr</span> <span class="operator">=</span> [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">arr.shift(); <span class="comment">// 把数组的第一个元素从其中删除，并返回第一个元素的值 =&gt; a</span></span><br><span class="line">arr.length; <span class="comment">// 改变数组长度 =&gt; 5</span></span><br><span class="line">arr; <span class="comment">// [&quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;]</span></span><br></pre></td></tr></table></figure><h1>头部添加一个或多个元素</h1><blockquote><p>unshift() 方法可向数组的开头添加一个或更多元素，并返回新的长度。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">var</span> <span class="variable">arr</span> <span class="operator">=</span> [<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">arr.unshift(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 向数组的开头添加一个新元素，并返回新的长度 6</span></span><br><span class="line">arr.length; <span class="comment">// 改变数组长度 =&gt; 6</span></span><br><span class="line">arr; <span class="comment">// [&quot;a&quot;,&quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">数组的删除与添加</summary>
    
    
    
    <category term="Web" scheme="https://qiqicsdn.github.io/categories/Web/"/>
    
    
    <category term="Vue" scheme="https://qiqicsdn.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Springboot+Vue实现文件上传、下载、预览</title>
    <link href="https://qiqicsdn.github.io/posts/4a1df1a2.html"/>
    <id>https://qiqicsdn.github.io/posts/4a1df1a2.html</id>
    <published>2023-12-11T06:07:30.292Z</published>
    <updated>2023-12-11T06:07:30.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="加一个全局的异常处理">加一个全局的异常处理</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/png/751015/1693142857806-95e147a7-3a9f-465c-b6e8-3164dcc07ff5.png#averageHue=%238e8753&amp;clientId=u355a6559-82c8-4&amp;from=paste&amp;height=405&amp;id=udee2de99&amp;originHeight=506&amp;originWidth=1461&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=93393&amp;status=done&amp;style=none&amp;taskId=u26b63130-ecba-4743-94e3-cab0c80142b&amp;title=&amp;width=1168.8" alt="image.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">globalException</span><span class="params">(Exception e)</span> &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">return</span> Result.error(<span class="string">&quot;500&quot;</span>, <span class="string">&quot;系统错误&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单文件上传">单文件上传</h2><p>postman请求<br><img src="https://cdn.nlark.com/yuque/0/2023/png/751015/1693143162599-df755b89-8696-42ee-8ea6-dc3aea4efebd.png#averageHue=%23fdfbfb&amp;clientId=u355a6559-82c8-4&amp;from=paste&amp;height=577&amp;id=ub028263f&amp;originHeight=721&amp;originWidth=1795&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=79755&amp;status=done&amp;style=none&amp;taskId=u906db263-f2d8-4087-ad9a-09644e0d245&amp;title=&amp;width=1436" alt="image.png"><br>文件上传代码：<br>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.core.io.FileUtil;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.common.AuthAccess;</span><br><span class="line"><span class="keyword">import</span> com.example.springboot.common.Result;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;ip:localhost&#125;&quot;)</span></span><br><span class="line">String ip;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">String port;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ROOT_PATH</span> <span class="operator">=</span>  System.getProperty(<span class="string">&quot;user.dir&quot;</span>) + File.separator + <span class="string">&quot;files&quot;</span>;  <span class="comment">// D:\B站\小白做毕设2024\代码\小白做毕设2024\files</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">upload</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> file.getOriginalFilename();  <span class="comment">// 文件的原始名称</span></span><br><span class="line">    <span class="comment">// aaa.png</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">mainName</span> <span class="operator">=</span> FileUtil.mainName(originalFilename);  <span class="comment">// aaa</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">extName</span> <span class="operator">=</span> FileUtil.extName(originalFilename);<span class="comment">// png</span></span><br><span class="line">    <span class="keyword">if</span> (!FileUtil.exist(ROOT_PATH)) &#123;</span><br><span class="line">        FileUtil.mkdir(ROOT_PATH);  <span class="comment">// 如果当前文件的父级目录不存在，就创建</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (FileUtil.exist(ROOT_PATH + File.separator + originalFilename)) &#123;  <span class="comment">// 如果当前上传的文件已经存在了，那么这个时候我就要重名一个文件名称</span></span><br><span class="line">        originalFilename = System.currentTimeMillis() + <span class="string">&quot;_&quot;</span> + mainName + <span class="string">&quot;.&quot;</span> + extName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">File</span> <span class="variable">saveFile</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(ROOT_PATH + File.separator + originalFilename);</span><br><span class="line">    file.transferTo(saveFile);  <span class="comment">// 存储文件到本地的磁盘里面去</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://&quot;</span> + ip + <span class="string">&quot;:&quot;</span> + port + <span class="string">&quot;/file/download/&quot;</span> + originalFilename;</span><br><span class="line">    <span class="keyword">return</span> Result.success(url);  <span class="comment">//返回文件的链接，这个链接就是文件的下载地址，这个下载地址就是我的后台提供出来的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vue<br>获取用户信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user: JSON.parse(localStorage.getItem(<span class="string">&#x27;honey-user&#x27;</span>) || <span class="string">&#x27;&#123;&#125;&#x27;</span>),</span><br></pre></td></tr></table></figure><p>文件上传组件代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-upload</span><br><span class="line">    action=&quot;http://localhost:9090/file/upload&quot;</span><br><span class="line">    :headers=&quot;&#123;token: user.token&#125;&quot;</span><br><span class="line">    :on-success=&quot;handleFileUpload&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;el-button size=&quot;mini&quot; type=&quot;primary&quot;&gt;单文件上传&lt;/el-button&gt;</span><br><span class="line">&lt;/el-upload&gt;</span><br></pre></td></tr></table></figure><p>文件上传回调钩子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">handleFileUpload(response, file, fileList) &#123;</span><br><span class="line">console.log(response, file, fileList)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>文件存储到后台，发送更新的请求</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">handleTableFileUpload(row, file, fileList) &#123;</span><br><span class="line">  console.log(row, file, fileList)</span><br><span class="line">  row.avatar = file.response.data</span><br><span class="line">  // this.$set(row, &#x27;avatar&#x27;, file.response.data)</span><br><span class="line">  console.log(row)</span><br><span class="line">  // 触发更新就可以了</span><br><span class="line">  request.put(&#x27;/user/update&#x27;, row).then(res =&gt; &#123;</span><br><span class="line">    if (res.code === &#x27;200&#x27;) &#123;</span><br><span class="line">      this.$message.success(&#x27;上传成功&#x27;)</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      this.$message.error(res.msg)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="多文件上传">多文件上传</h2><p>vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-upload</span><br><span class="line">      action=&quot;http://localhost:9090/file/upload&quot;</span><br><span class="line">      :headers=&quot;&#123;token: user.token&#125;&quot;</span><br><span class="line">      :on-success=&quot;handleMultipleFileUpload&quot;</span><br><span class="line">      multiple</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;el-button size=&quot;mini&quot; type=&quot;success&quot;&gt;多文件上传&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot; style=&quot;margin:  10px 0&quot; @click=&quot;showUrls&quot;&gt;显示上传的链接&lt;/el-button&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">handleMultipleFileUpload(response, file, fileList) &#123;</span><br><span class="line">  this.urls = fileList.map(v =&gt; v.response?.data)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="文件下载">文件下载</h2><p>response.addHeader(“Content-Disposition”, “attachment;filename=” + URLEncoder.encode(fileFullName, “UTF-8”));  // 附件下载</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuthAccess</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/download/&#123;fileName&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(<span class="meta">@PathVariable</span> String fileName, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + URLEncoder.encode(fileFullName, <span class="string">&quot;UTF-8&quot;</span>));  <span class="comment">// 附件下载</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> ROOT_PATH  + File.separator + fileName;</span><br><span class="line">    <span class="keyword">if</span> (!FileUtil.exist(filePath)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">byte</span>[] bytes = FileUtil.readBytes(filePath);</span><br><span class="line">    <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">    outputStream.write(bytes);  <span class="comment">// 数组是一个字节数组，也就是文件的字节流数组</span></span><br><span class="line">    outputStream.flush();</span><br><span class="line">    outputStream.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文件预览">文件预览</h2><p>根据文件的类型区分的，一般是图片和pdf可以预览<br>response.addHeader(“Content-Disposition”, “inline;filename=” + URLEncoder.encode(fileFullName, “UTF-8”));  // 预览</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@AuthAccess</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/download/&#123;fileName&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">download</span><span class="params">(<span class="meta">@PathVariable</span> String fileName, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;inline;filename=&quot;</span> + URLEncoder.encode(fileFullName, <span class="string">&quot;UTF-8&quot;</span>));  <span class="comment">// 预览</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">filePath</span> <span class="operator">=</span> ROOT_PATH  + File.separator + fileName;</span><br><span class="line">    <span class="keyword">if</span> (!FileUtil.exist(filePath)) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">byte</span>[] bytes = FileUtil.readBytes(filePath);</span><br><span class="line">    <span class="type">ServletOutputStream</span> <span class="variable">outputStream</span> <span class="operator">=</span> response.getOutputStream();</span><br><span class="line">    outputStream.write(bytes);  <span class="comment">// 数组是一个字节数组，也就是文件的字节流数组</span></span><br><span class="line">    outputStream.flush();</span><br><span class="line">    outputStream.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Springboot+Vue实现文件上传、下载、预览</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>TreeUtil工具使用</title>
    <link href="https://qiqicsdn.github.io/posts/b2a5fe21.html"/>
    <id>https://qiqicsdn.github.io/posts/b2a5fe21.html</id>
    <published>2023-12-09T14:02:42.784Z</published>
    <updated>2023-12-09T14:02:42.784Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://blog.csdn.net/Anenan/article/details/113029547">https://blog.csdn.net/Anenan/article/details/113029547</a></p><pre><code> https://blog.csdn.net/Xin_101/article/details/115252284</code></pre><h1>依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>后端代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.查数据</span></span><br><span class="line">List&lt;Bean&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.配置</span></span><br><span class="line"><span class="type">TreeNodeConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TreeNodeConfig</span>();</span><br><span class="line"><span class="comment">//config.setIdKey(&quot;id&quot;);//默认为id可以不设置</span></span><br><span class="line"><span class="comment">//config.setParentIdKey(&quot;parentId&quot;);//默认为parentId可以不设置</span></span><br><span class="line"><span class="comment">//config.setDeep(4);//最大递归深度</span></span><br><span class="line">config.setWeightKey(<span class="string">&quot;priority&quot;</span>);<span class="comment">//排序字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.转树，Tree&lt;&gt;里面泛型为id的类型</span></span><br><span class="line">List&lt;Tree&lt;Long&gt;&gt; build = TreeUtil.build(list, <span class="number">0L</span>, config, (object, tree) -&gt; &#123;</span><br><span class="line">    <span class="comment">// 也可以使用 tree.setId(object.getId());等一些默认值</span></span><br><span class="line">    tree.putExtra(<span class="string">&quot;id&quot;</span>, object.getId());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;parentId&quot;</span>, object.getParentId());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;icon&quot;</span>, object.getIcon());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;name&quot;</span>, object.getName());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;url&quot;</span>, object.getUrl());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;priority&quot;</span>, object.getPriority());</span><br><span class="line">    tree.putExtra(<span class="string">&quot;type&quot;</span>, object.getType());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">TreeUtil工具使用</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>树结构展示</title>
    <link href="https://qiqicsdn.github.io/posts/b7fa406f.html"/>
    <id>https://qiqicsdn.github.io/posts/b7fa406f.html</id>
    <published>2023-12-09T13:33:42.648Z</published>
    <updated>2023-12-09T13:33:42.648Z</updated>
    
    <content type="html"><![CDATA[<h1>Vue递归构造树形结构</h1><p>参考：<a href="https://blog.csdn.net/qq_17165047/article/details/99363858">https://blog.csdn.net/qq_17165047/article/details/99363858</a></p><p>搜索<a href="https://so.csdn.net/so/search?q=elementui&amp;spm=1001.2101.3001.7020">elementui</a>文档 找到一个朴实无华的demo 如下</p><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312092154811.png" alt="img"></p><p>之后查看其源码如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-tree :data=<span class="string">&quot;data&quot;</span> :props=<span class="string">&quot;defaultProps&quot;</span> @node-click=<span class="string">&quot;handleNodeClick&quot;</span>&gt;&lt;/el-tree&gt;</span><br><span class="line"> </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">label</span>: <span class="string">&#x27;一级 1&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">label</span>: <span class="string">&#x27;二级 1-1&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">label</span>: <span class="string">&#x27;三级 1-1-1&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">label</span>: <span class="string">&#x27;一级 2&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">label</span>: <span class="string">&#x27;二级 2-1&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">label</span>: <span class="string">&#x27;三级 2-1-1&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">label</span>: <span class="string">&#x27;二级 2-2&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">label</span>: <span class="string">&#x27;三级 2-2-1&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">label</span>: <span class="string">&#x27;一级 3&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">label</span>: <span class="string">&#x27;二级 3-1&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">label</span>: <span class="string">&#x27;三级 3-1-1&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">label</span>: <span class="string">&#x27;二级 3-2&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">children</span>: [&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="attr">label</span>: <span class="string">&#x27;三级 3-2-1&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">defaultProps</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">children</span>: <span class="string">&#x27;children&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="attr">label</span>: <span class="string">&#x27;label&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title function_">handleNodeClick</span>(<span class="params">data</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>由此可见 elementui的tree组件所需要的数据结构 为 <strong>label 显示名</strong> 和 <strong>hildren 子节点</strong> 两个属性</p><p>于是我们去后台新建vo来构造该组件的返回数据 如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BusConfDeviceTypeVO</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//节点id</span></span><br><span class="line">    <span class="keyword">private</span> String id ;</span><br><span class="line">    <span class="comment">//节点名称</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//节点的子节点</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;BusConfDeviceTypeVO&gt; children;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我所创建的数据库非常简单 我默认-1 为数据的顶级节点的父节点</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `bus_conf_device_type` (</span><br><span class="line">  `id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数据有效 0 已删除 1&#x27;</span>,</span><br><span class="line">  `pid` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;父节点&#x27;</span>,</span><br><span class="line">  `device_type` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;设备类型&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4;</span><br></pre></td></tr></table></figure><p>之后开始进行递归操作来构建数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Override</span></span><br><span class="line">   public List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> getTreeData() &#123;</span><br><span class="line"></span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> deviceTypeTree <span class="operator">=</span> <span class="keyword">new</span> ArrayList<span class="operator">&lt;&gt;</span>();</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>首先获取到所有顶级节点</span><br><span class="line">       BusConfDeviceType param <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceType();</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>查询全部</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> selectAll <span class="operator">=</span> this.deviceTypeMapper.select(param);</span><br><span class="line"></span><br><span class="line">       param.setPid(&quot;-1&quot;);</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>查询顶级父节点</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">=</span> this.deviceTypeMapper.select(param);</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>结果判断</span><br><span class="line">       if (select.size() <span class="operator">&gt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> <span class="keyword">select</span> <span class="operator">!=</span> <span class="keyword">null</span>)&#123;</span><br><span class="line">           select.forEach(data <span class="operator">-</span><span class="operator">&gt;</span> &#123;</span><br><span class="line">               BusConfDeviceTypeVO deviceTypeVO <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceTypeVO();</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>构建数据</span><br><span class="line">               deviceTypeVO.setId(data.getId());</span><br><span class="line">               deviceTypeVO.setName(data.getDeviceType());</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>子节点递归查找添加  传递父节点</span><br><span class="line">               deviceTypeVO.setChildren(getChildren(data.getId(),selectAll));</span><br><span class="line"></span><br><span class="line">               deviceTypeTree.add(deviceTypeVO);</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> deviceTypeTree;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="operator">/</span><span class="operator">/</span>递归获取children节点</span><br><span class="line">   private List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> getChildren(String pid,List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> list) &#123;</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>建立集合</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> children <span class="operator">=</span> <span class="keyword">new</span> ArrayList<span class="operator">&lt;&gt;</span>();</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>参数判空</span><br><span class="line">       if (StringUtils.isNotBlank(pid))&#123;</span><br><span class="line"></span><br><span class="line">           list.forEach(data <span class="operator">-</span><span class="operator">&gt;</span>&#123;</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>若遍历的数据中的父节点id等于参数id</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>则判定当前节点为该参数id节点下的子节点</span><br><span class="line">               if (pid.equals(data.getPid()))&#123;</span><br><span class="line">                   <span class="operator">/</span><span class="operator">/</span>构造添加结果集合</span><br><span class="line">                   BusConfDeviceTypeVO deviceTypeVO <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceTypeVO();</span><br><span class="line">                   deviceTypeVO.setId(data.getId());</span><br><span class="line">                   deviceTypeVO.setName(data.getDeviceType());</span><br><span class="line">                   children.add(deviceTypeVO);</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>循环添加子菜单</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>遍历children 集合</span><br><span class="line">       <span class="keyword">for</span> (BusConfDeviceTypeVO deviceTypeVO : children) &#123;</span><br><span class="line"></span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>创建查询对象</span><br><span class="line">           BusConfDeviceType paramsChildren <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceType();</span><br><span class="line">           paramsChildren.setPid(deviceTypeVO.getId());</span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>查询该节点为父节点下的所有数据</span><br><span class="line">           List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> <span class="keyword">result</span> <span class="operator">=</span> this.deviceTypeMapper.select(paramsChildren);</span><br><span class="line"></span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>若该数据存在 添加集合到子节点中</span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>启用递归 继续探索叶子节点</span><br><span class="line">           if (result.size() <span class="operator">&gt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> <span class="keyword">result</span> <span class="operator">!=</span> <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span> 递归调用</span><br><span class="line">               deviceTypeVO.setChildren(getChildren(deviceTypeVO.getId(),list));</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>若最后结果为空  则停止递归 返回值为<span class="keyword">null</span>  赋予上级数据children属性</span><br><span class="line">       if (children.size() <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> children;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>之后开始进行递归操作来构建数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Override</span></span><br><span class="line">   public List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> getTreeData() &#123;</span><br><span class="line"></span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> deviceTypeTree <span class="operator">=</span> <span class="keyword">new</span> ArrayList<span class="operator">&lt;&gt;</span>();</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>首先获取到所有顶级节点</span><br><span class="line">       BusConfDeviceType param <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceType();</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>查询全部</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> selectAll <span class="operator">=</span> this.deviceTypeMapper.select(param);</span><br><span class="line"></span><br><span class="line">       param.setPid(&quot;-1&quot;);</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>查询顶级父节点</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">=</span> this.deviceTypeMapper.select(param);</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>结果判断</span><br><span class="line">       if (select.size() <span class="operator">&gt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> <span class="keyword">select</span> <span class="operator">!=</span> <span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           select.forEach(data <span class="operator">-</span><span class="operator">&gt;</span> &#123;</span><br><span class="line">               BusConfDeviceTypeVO deviceTypeVO <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceTypeVO();</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>构建数据</span><br><span class="line">               deviceTypeVO.setId(data.getId());</span><br><span class="line">               deviceTypeVO.setName(data.getDeviceType());</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>子节点递归查找添加  传递父节点</span><br><span class="line">               deviceTypeVO.setChildren(getChildren(data.getId(),selectAll));</span><br><span class="line"></span><br><span class="line">               deviceTypeTree.add(deviceTypeVO);</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> deviceTypeTree;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="operator">/</span><span class="operator">/</span>递归获取children节点</span><br><span class="line">   private List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> getChildren(String pid,List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> list) &#123;</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>建立集合</span><br><span class="line">       List<span class="operator">&lt;</span>BusConfDeviceTypeVO<span class="operator">&gt;</span> children <span class="operator">=</span> <span class="keyword">new</span> ArrayList<span class="operator">&lt;&gt;</span>();</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>参数判空</span><br><span class="line">       if (StringUtils.isNotBlank(pid))&#123;</span><br><span class="line"></span><br><span class="line">           list.forEach(data <span class="operator">-</span><span class="operator">&gt;</span>&#123;</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>若遍历的数据中的父节点id等于参数id</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span>则判定当前节点为该参数id节点下的子节点</span><br><span class="line">               if (pid.equals(data.getPid()))&#123;</span><br><span class="line">                   <span class="operator">/</span><span class="operator">/</span>构造添加结果集合</span><br><span class="line">                   BusConfDeviceTypeVO deviceTypeVO <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceTypeVO();</span><br><span class="line">                   deviceTypeVO.setId(data.getId());</span><br><span class="line">                   deviceTypeVO.setName(data.getDeviceType());</span><br><span class="line">                   children.add(deviceTypeVO);</span><br><span class="line"></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;);</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>循环添加子菜单</span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>遍历children 集合</span><br><span class="line">       <span class="keyword">for</span> (BusConfDeviceTypeVO deviceTypeVO : children) &#123;</span><br><span class="line"></span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>创建查询对象</span><br><span class="line">           BusConfDeviceType paramsChildren <span class="operator">=</span> <span class="keyword">new</span> BusConfDeviceType();</span><br><span class="line">           paramsChildren.setPid(deviceTypeVO.getId());</span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>查询该节点为父节点下的所有数据</span><br><span class="line">           List<span class="operator">&lt;</span>BusConfDeviceType<span class="operator">&gt;</span> <span class="keyword">result</span> <span class="operator">=</span> this.deviceTypeMapper.select(paramsChildren);</span><br><span class="line"></span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>若该数据存在 添加集合到子节点中</span><br><span class="line">           <span class="operator">/</span><span class="operator">/</span>启用递归 继续探索叶子节点</span><br><span class="line">           if (result.size() <span class="operator">&gt;</span> <span class="number">0</span> <span class="operator">&amp;&amp;</span> <span class="keyword">result</span> <span class="operator">!=</span> <span class="keyword">null</span>) &#123;</span><br><span class="line">               <span class="operator">/</span><span class="operator">/</span> 递归调用</span><br><span class="line">               deviceTypeVO.setChildren(getChildren(deviceTypeVO.getId(),list));</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="operator">/</span><span class="operator">/</span>若最后结果为空  则停止递归 返回值为<span class="keyword">null</span>  赋予上级数据children属性</span><br><span class="line">       if (children.size() <span class="operator">=</span><span class="operator">=</span> <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> children;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这样启动项目 利用postman 进行访问 可以得出如下结果</p><p>这样data中的数据就和组件所需要的数据相同了</p><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312092140657.png" alt="img"></p><p>之后完善前端页面 回填数据</p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-tree</span> <span class="attr">class</span>=<span class="string">&quot;treeclass&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;tree&quot;</span> <span class="attr">:data</span>=<span class="string">&quot;treeData&quot;</span>   <span class="attr">:props</span>=<span class="string">&quot;defaultProps&quot;</span> @<span class="attr">node-click</span>=<span class="string">&quot;nodeclick&quot;</span> @<span class="attr">check-change</span>=<span class="string">&quot;handleClick&quot;</span>  <span class="attr">node-key</span>=<span class="string">&quot;id&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">el-tree</span>&gt;</span></span><br></pre></td></tr></table></figure><p>javascript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getdata</span>(<span class="params"></span>) &#123; <span class="comment">//本人自定义方法 </span></span><br><span class="line">         <span class="title class_">DeviceTypeList</span>()<span class="comment">//本人自定义方法 </span></span><br><span class="line">             .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">                 <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res))</span><br><span class="line"> </span><br><span class="line">                 <span class="keyword">if</span> (res.<span class="property">status</span> == <span class="number">200</span>)&#123;</span><br><span class="line">                     <span class="variable language_">this</span>.<span class="property">treeData</span> = res.<span class="property">data</span>;</span><br><span class="line">                     <span class="variable language_">this</span>.$message(&#123;</span><br><span class="line">                         <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">                         <span class="attr">message</span>: <span class="string">&#x27;数据加载成功！&#x27;</span></span><br><span class="line">                     &#125;)</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;)</span><br><span class="line">             .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                 <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span><br><span class="line">                 <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;数据获取失败，请稍后再试！&#x27;</span>)</span><br><span class="line">             &#125;)</span><br><span class="line">     &#125;,</span><br></pre></td></tr></table></figure><p>这样启动前端项目 访问后 控制台便可以打印出结果 格式化后与postman获取到的结果一致</p><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312092142009.png" alt="img"></p><p>页面效果如下</p><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312092143807.png" alt="img"></p>]]></content>
    
    
    <summary type="html">树结构展示</summary>
    
    
    
    <category term="Web" scheme="https://qiqicsdn.github.io/categories/Web/"/>
    
    
    <category term="Vue" scheme="https://qiqicsdn.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>下载网站</title>
    <link href="https://qiqicsdn.github.io/posts/c833b494.html"/>
    <id>https://qiqicsdn.github.io/posts/c833b494.html</id>
    <published>2023-12-07T14:44:30.278Z</published>
    <updated>2023-12-07T14:44:30.278Z</updated>
    
    <content type="html"><![CDATA[<p><strong>JDK历代版本</strong>：<a href="https://www.oracle.com/java/technologies/downloads/archive/">https://www.oracle.com/java/technologies/downloads/archive/</a></p><p><strong>JDK8历代版本</strong>：<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html">https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html</a></p><p><strong>WebStorm</strong>：<a href="https://www.jetbrains.com/webstorm/download/other.html">https://www.jetbrains.com/webstorm/download/other.html</a></p><p><strong>ApiPost</strong>：<a href="https://www.apipost.cn/download.html?fr=kuangshen">https://www.apipost.cn/download.html?fr=kuangshen</a></p><p><strong>Nginx</strong>：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><p><strong>Node</strong>：<a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a></p><p><strong>python</strong>：<a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p><p><strong>Centos</strong>（阿里开源）：<a href="http://mirrors.aliyun.com/centos/7/isos/x86_64/">http://mirrors.aliyun.com/centos/7/isos/x86_64/</a></p><p><strong>git淘宝镜像下载</strong>：<a href="http://npm.taobao.org/mirrors/git-for-windows/">http://npm.taobao.org/mirrors/git-for-windows/</a></p><p><strong>git官网</strong>：<a href="https://git-scm.com/">https://git-scm.com/</a></p><h3 id="jekins">jekins</h3><ul><li></li></ul><p>jenkins官网：<a href="https://jenkins.io/">https://jenkins.io/</a></p><ul><li></li></ul><p>jenkins历史版本下载：<a href="http://mirrors.jenkins.io/">http://mirrors.jenkins.io/</a></p><ul><li></li></ul><p>清华镜像地址：<a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins">https://mirrors.tuna.tsinghua.edu.cn/jenkins</a></p><h3 id="python镜像源">python镜像源:</h3><ul><li><strong>清华</strong>：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li><strong>阿里云</strong>：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></li><li><strong>中国科技大学</strong> <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></li><li><strong>华中理工大学</strong>：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></li><li><strong>山东理工大学</strong>：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a></li><li><strong>豆瓣</strong>：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li></ul><h3 id="驱动下载">驱动下载</h3><ul><li><strong>Firefox</strong> 浏览器驱动：<a href="https://github.com/mozilla/geckodriver/releases">Firefox</a></li><li><strong>Chrome</strong> 浏览器驱动：<a href="https://chromedriver.storage.googleapis.com/index.html">Chrome</a></li><li><strong>IE</strong> 浏览器驱动：<a href="http://selenium-release.storage.googleapis.com/index.html">IE</a></li><li><strong>Edge</strong> 浏览器驱动：<a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/">Edge</a></li><li><strong>PhantomJS</strong> 浏览器驱动：<a href="https://phantomjs.org/">PhantomJS</a></li><li><strong>Opera</strong> 浏览器驱动：<a href="https://github.com/operasoftware/operachromiumdriver/releases">Opera</a></li></ul><h3 id="Es">Es</h3><p><strong>ES官网</strong>：<a href="https://www.elastic.co/cn/downloads/">https://www.elastic.co/cn/downloads/</a></p><p><strong>Kibana官网：</strong><a href="https://www.elastic.co/cn/kibana/">https://www.elastic.co/cn/kibana/</a></p><p><strong>ElasticSearch</strong>: <a href="https://mirrors.huaweicloud.com/elasticsearch/?C=N&amp;O=D">https://mirrors.huaweicloud.com/elasticsearch/?C=N&amp;O=D</a></p><p><strong>logstash</strong>: <a href="https://mirrors.huaweicloud.com/logstash/?C=N&amp;O=D">https://mirrors.huaweicloud.com/logstash/?C=N&amp;O=D</a></p><p><strong>kibana</strong>: <a href="https://mirrors.huaweicloud.com/kibana/?C=N&amp;O=D">https://mirrors.huaweicloud.com/kibana/?C=N&amp;O=D</a></p><p><strong>下载head插件</strong>: <a href="https://github.com/mobz/elasticsearch-head/archive/master.zip">https://github.com/mobz/elasticsearch-head/archive/master.zip</a></p><h3 id="Docker">Docker</h3><p>Hub：<a href="https://hub.docker.com/choose-plan?ref=signup">https://hub.docker.com/choose-plan?ref=signup</a></p><p>Docs：<a href="https://docs.docker.com/engine/install/centos/">https://docs.docker.com/engine/install/centos/</a></p>]]></content>
    
    
    <summary type="html">下载网站</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>学习网站</title>
    <link href="https://qiqicsdn.github.io/posts/52e318f2.html"/>
    <id>https://qiqicsdn.github.io/posts/52e318f2.html</id>
    <published>2023-12-07T14:42:14.805Z</published>
    <updated>2023-12-07T14:42:14.805Z</updated>
    
    <content type="html"><![CDATA[<p>全面学习网站:<a href="https://github.com/XiangLinPro/IT_book">https://github.com/XiangLinPro/IT_book</a></p><p>码农教程：<a href="http://www.manongjc.com/">http://www.manongjc.com/</a></p><p>Mikuools：<a href="https://tools.miku.ac/">https://tools.miku.ac/</a></p><p>编程语言网站：<a href="http://c.biancheng.net/sitemap/">http://c.biancheng.net/sitemap/</a></p><p>Vant学习网站：<a href="https://www.w3cschool.cn/vantlesson/">https://www.w3cschool.cn/vantlesson/</a></p><p>W3CSchool：<a href="https://www.w3cschool.cn/">https://www.w3cschool.cn/</a></p><p>w3xue：<a href="https://www.w3xue.com/exp/">https://www.w3xue.com/exp/</a></p><p>ERP系统网站：<a href="http://www.dimix.cn/">http://www.dimix.cn/</a></p><h2 id="一、常用网站">一、常用网站</h2><p>力扣:<a href="https://leetcode-cn.com/problemset/all/">https://leetcode-cn.com/problemset/all/</a></p><p>牛客网:<a href="https://www.nowcoder.com/">https://www.nowcoder.com/</a></p><p>CSDN:<a href="https://www.csdn.net/">https://www.csdn.net/</a></p><p>博客园:<a href="https://www.cnblogs.com/">https://www.cnblogs.com/</a></p><p>Github:<a href="https://github.com/">https://github.com/</a></p><p>慕课网:<a href="https://www.imooc.com/">https://www.imooc.com/</a></p><p>Oracle:<a href="https://www.oracle.com/index.html">https://www.oracle.com/index.html</a></p><p>简历网站:<a href="https://www.job592.com/">https://www.job592.com/</a></p><h2 id="二、java">二、java</h2><p>java单词：<a href="https://www.cnblogs.com/hinux/articles/10201988.html">https://www.cnblogs.com/hinux/articles/10201988.html</a></p><p>java学习技术树：<a href="https://edu.csdn.net/skill/java">https://edu.csdn.net/skill/java</a></p><p>java黑马学习路线图：<a href="https://blog.csdn.net/yinuo_chao/article/details/123242105">https://blog.csdn.net/yinuo_chao/article/details/123242105</a></p><p>java基础笔记：<a href="https://mrjokersince1997.github.io/My-Notes/#/">https://mrjokersince1997.github.io/My-Notes/#/</a></p><p>java项目:<a href="https://markerhub.com/">https://markerhub.com/</a></p><p>狂神教程：<a href="https://www.kuangstudy.com/">https://www.kuangstudy.com/</a></p><p>springboot教程：<a href="http://www.chilangedu.com/course/1489582623.html">http://www.chilangedu.com/course/1489582623.html</a></p><p>springboot教程：<a href="https://lizhou.blog.csdn.net/category_9196017_2.html">https://lizhou.blog.csdn.net/category_9196017_2.html</a></p><p>创建Springboot项目官网：<a href="https://start.spring.io/">https://start.spring.io/</a></p><p>thymeleaf文档：<a href="https://www.thymeleaf.org/documentation.html">https://www.thymeleaf.org/documentation.html</a></p><p>Banner在线生成工具：<a href="https://www.bootschool.net/ascii/">https://www.bootschool.net/ascii/</a></p><p>修改Tomcat图标工具：<a href="https://www.bitbug.net/">https://www.bitbug.net/</a></p><p>修改图标操作步骤：<a href="http://www.javashuo.com/article/p-wqvgdfqf-sv.html">http://www.javashuo.com/article/p-wqvgdfqf-sv.html</a></p><p>自学小网站:<a href="https://how2j.cn/">https://how2j.cn/</a></p><p>java常用网站:<a href="https://blog.csdn.net/scmrpu/article/details/50487172">https://blog.csdn.net/scmrpu/article/details/50487172</a></p><h2 id="三、Web">三、Web</h2><p>HTML5+CSS脚本:<a href="https://sc.chinaz.com/jiaoben/">https://sc.chinaz.com/jiaoben/</a></p><p>Bootstrap(web)学习网站:<a href="https://www.bootcss.com/">https://www.bootcss.com/</a></p><p>vuetify中文官网：<a href="https://vuetifyjs.com/zh-Hans/">https://vuetifyjs.com/zh-Hans/</a></p><p>JQuery插件库：<a href="https://www.jq22.com/">https://www.jq22.com/</a></p><p>Vue cli：<a href="https://cli.vuejs.org/zh/guide/creating-a-project.html">https://cli.vuejs.org/zh/guide/creating-a-project.html</a></p><p>element：<a href="https://element.eleme.cn/#/zh-CN/component/installation">https://element.eleme.cn/#/zh-CN/component/installation</a></p><p>React：<a href="https://react.docschina.org/">https://react.docschina.org/</a></p><p>JSON工具：<a href="https://www.bejson.com/othertools/cron/">https://www.bejson.com/othertools/cron/</a></p><h2 id="四、数据结构和算法">四、数据结构和算法</h2><p>十大经典算法:<a href="https://www.cnblogs.com/ice-line/p/11753852.html">https://www.cnblogs.com/ice-line/p/11753852.html</a></p><p>八大数据结构:<a href="https://blog.csdn.net/yeyazhishang/article/details/82353846">https://blog.csdn.net/yeyazhishang/article/details/82353846</a></p><p>数据和算法总结:<a href="https://www.cnblogs.com/xkzhangsanx/p/10888179.html">https://www.cnblogs.com/xkzhangsanx/p/10888179.html</a></p><h2 id="五、数据库">五、数据库</h2><p>mysql安装教程:</p><p>Oracle安装教程:<a href="https://www.cnblogs.com/plutozzl/p/13490348.html">https://www.cnblogs.com/plutozzl/p/13490348.html</a></p><p>PLSQL安装教程:<a href="https://www.cnblogs.com/gaozejie/p/9741186.html">https://www.cnblogs.com/gaozejie/p/9741186.html</a></p><p>注册码:<a href="https://www.cnblogs.com/jijm123/p/13393008.html">https://www.cnblogs.com/jijm123/p/13393008.html</a></p><p>Oracle和mysql区别:<a href="https://buxianshan.xyz/archives/26.html">https://buxianshan.xyz/archives/26.html</a></p><p>mysql练习题:<a href="https://blog.csdn.net/original_recipe/article/details/91958663">https://blog.csdn.net/original_recipe/article/details/91958663</a></p><p>mysql面试题:<a href="https://www.cnblogs.com/williamjie/p/11081592.html">https://www.cnblogs.com/williamjie/p/11081592.html</a></p><h2 id="六、C语言">六、C语言</h2><p>C语言学习:<a href="https://blog.csdn.net/weixin_44617968/article/details/117656810?utm_medium=distribute.pc_feed_404.none-task-blog-2">https://blog.csdn.net/weixin_44617968/article/details/117656810?utm_medium=distribute.pc_feed_404.none-task-blog-2</a>PERSONRECdefaultdefault-20.control40</p><h2 id="七、帮助文档">七、帮助文档</h2><p>HTML帮助文档:<a href="https://man.ilovefishc.com/html5/">https://man.ilovefishc.com/html5/</a></p><p>CSS帮助文档:<a href="https://man.ilovefishc.com/css3/">https://man.ilovefishc.com/css3/</a></p><p>JQuery帮助文档:<a href="https://www.jquery123.com/">https://www.jquery123.com/</a></p><p>W3school帮助文档:<a href="https://www.w3school.com.cn/">https://www.w3school.com.cn/</a></p><h2 id="八、测试">八、测试</h2><p>猪猪网站：<a href="https://www.iculture.cc/category/software">https://www.iculture.cc/category/software</a></p><p>Katalon Studio：<a href="http://www.51ste.com/front/det-12.html">http://www.51ste.com/front/det-12.html</a></p><p>jmeter黑羽教程：<a href="https://www.byhy.net/">https://www.byhy.net/</a></p><h2 id="九、面试">九、面试</h2><p>java基础：<a href="https://www.javanav.com/interview/93b0069472fd479393006c0e73043fc4.html">https://www.javanav.com/interview/93b0069472fd479393006c0e73043fc4.html</a></p><p>java全：<a href="https://blog.csdn.net/ThinkWon/article/details/103592572">https://blog.csdn.net/ThinkWon/article/details/103592572</a></p><p>八股文：<a href="http://interviewtop.top/#/index">http://interviewtop.top/#/index</a></p><p>前端面试：<a href="https://juejin.cn/post/7061588533214969892">https://juejin.cn/post/7061588533214969892</a></p><h2 id="十、导航">十、导航</h2><p>前端导航：<a href="https://www.webjike.com/web.html#row-24">https://www.webjike.com/web.html#row-24</a></p><p>web前端导航：<a href="http://www.alloyteam.com/nav/">http://www.alloyteam.com/nav/</a></p><p>前站导航：<a href="http://www.frontendjs.com/">http://www.frontendjs.com/</a></p><p>编程导航：<a href="https://www.code-nav.cn/">https://www.code-nav.cn/</a></p><p>程序员导航：<a href="http://www.cxysite.com/">http://www.cxysite.com/</a></p><p>设宝导航：<a href="https://hao.sheboo.com/qian">https://hao.sheboo.com/qian</a></p><p>破解：<a href="https://www.ypojie.com/pc">https://www.ypojie.com/pc</a></p><p>软件先锋：<a href="https://soft.macxf.com/">https://soft.macxf.com/</a></p><p>福利导航：<a href="https://www.coderfuli.com/#/home#openSource">https://www.coderfuli.com/#/home#openSource</a></p><h2 id="十一、组件">十一、组件</h2><p>图标：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p><p>pixso：<a href="https://pixso.cn/">https://pixso.cn/</a></p><p>前端Vant：<a href="https://www.wenjiangs.com/doc/vant-home">https://www.wenjiangs.com/doc/vant-home</a></p><p>前端AntDesign：<a href="https://ant.design/index-cn">https://ant.design/index-cn</a></p><p>前端AntV：<a href="https://antv.vision/zh">https://antv.vision/zh</a></p><p>前端bootstrap Blazor：<a href="https://www.blazor.zone/dropdowns">https://www.blazor.zone/dropdowns</a></p><p>前端 Layui：<a href="https://layuion.com/docs/">https://layuion.com/docs/</a></p><p>前端Taro：<a href="https://taro-ui.jd.com/#/docs/swiper">https://taro-ui.jd.com/#/docs/swiper</a></p><p>前端Vuetifyjs：<a href="https://vuetifyjs.com/en/introduction/why-vuetify">https://vuetifyjs.com/en/introduction/why-vuetify</a></p><p>腾讯 TDesign企业级设计体系https://tdesign.tencent.com/</p><p>字节跳动 arco.design企业级设计系统：<a href="https://arco.design/">https://arco.design/</a></p><p>抖音的semidesign 企业应用设计系统：<a href="https://semi.design/zh-CN/">https://semi.design/zh-CN/</a></p><p>蚂蚁金服 Ant Design企业级产品设计体系：<a href="https://ant.design/index-cn">https://ant.design/index-cn</a></p><p>蚂蚁金服数据可视化AntV：<a href="https://antv.vision/zh">https://antv.vision/zh</a></p><p>饿了么 Element桌面端组件库：<a href="https://element.eleme.cn/#/zh-CN">https://element.eleme.cn/#/zh-CN</a></p><p>阿里 Alibaba Fusion Design企业级中后台设计系统：<a href="https://fusion.design/pc">https://fusion.design/pc</a></p><p>Teambition-ClarityDesign设计系统：<a href="https://design.teambition.com/">https://design.teambition.com/</a></p><p>阿里云管控平台Xconsole：<a href="https://xconsole.cloud/">https://xconsole.cloud/</a></p><p>阿里飞冰：<a href="https://ice.work/">https://ice.work/</a></p><p>华为 华为云DevUI中后台产品设计系统：<a href="https://devui.design/home">https://devui.design/home</a></p><p>百度 百度智能云CxD·规范：<a href="http://yunshe.design/#/guide">http://yunshe.design/#/guide</a></p><p>京东 UDC Design前中后台设计体系：<a href="https://findesign.jd.com/#/home">https://findesign.jd.com/#/home</a></p><h2 id="十二、学习项目">十二、学习项目</h2><p>瑞吉外卖：<a href="https://gitee.com/xuleiProject/delivery-springboot">https://gitee.com/xuleiProject/delivery-springboot</a></p><p><a href="https://github.com/twbs/bootstrap/releases/download/v3.4.1/bootstrap-3.4.1-dist.zip">https://github.com/twbs/bootstrap/releases/download/v3.4.1/bootstrap-3.4.1-dist.zip</a></p><p><a href="https://github.com/twbs/bootstrap/archive/v3.4.1.zip">https://github.com/twbs/bootstrap/archive/v3.4.1.zip</a></p><p><a href="https://github.com/twbs/bootstrap-sass/archive/v3.4.1.tar.gz">https://github.com/twbs/bootstrap-sass/archive/v3.4.1.tar.gz</a></p>]]></content>
    
    
    <summary type="html">学习网站</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>发送mail</title>
    <link href="https://qiqicsdn.github.io/posts/38a355ba.html"/>
    <id>https://qiqicsdn.github.io/posts/38a355ba.html</id>
    <published>2023-12-07T14:40:51.801Z</published>
    <updated>2023-12-07T14:40:51.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-添加依赖">1.添加依赖</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-配置文件">2.配置文件</h3><p>properties：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.mail.username</span>=<span class="string">XXXXXXXX@qq.com</span></span><br><span class="line"><span class="attr">spring.mail.password</span>=<span class="string">你的qq授权码</span></span><br><span class="line"><span class="attr">spring.mail.host</span>=<span class="string">smtp.qq.com</span></span><br><span class="line"><span class="comment"># qq需要配置ssl</span></span><br><span class="line"><span class="attr">spring.mail.properties.mail.smtp.ssl.enable</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><p>yaml：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">XXXXXXXXX@qq.com</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">你的qq授权码</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br></pre></td></tr></table></figure><p>获取授权码：在QQ邮箱中的设置-&gt;账户-&gt;开启pop3和smtp服务</p><h3 id="3-测试">3.测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">JavaMailSenderImpl mailSender;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">   <span class="comment">//邮件设置1：一个简单的邮件</span></span><br><span class="line">   <span class="type">SimpleMailMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleMailMessage</span>();</span><br><span class="line">   message.setSubject(<span class="string">&quot;通知-明天早起上班&quot;</span>);</span><br><span class="line">   message.setText(<span class="string">&quot;明天9:00开会&quot;</span>);</span><br><span class="line"></span><br><span class="line">   message.setTo(<span class="string">&quot;24736743@qq.com&quot;</span>);</span><br><span class="line">   message.setFrom(<span class="string">&quot;24736743@qq.com&quot;</span>);</span><br><span class="line">   mailSender.send(message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads2</span><span class="params">()</span> <span class="keyword">throws</span> MessagingException &#123;</span><br><span class="line">   <span class="comment">//邮件设置2：一个复杂的邮件</span></span><br><span class="line">   <span class="type">MimeMessage</span> <span class="variable">mimeMessage</span> <span class="operator">=</span> mailSender.createMimeMessage();</span><br><span class="line">   <span class="type">MimeMessageHelper</span> <span class="variable">helper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MimeMessageHelper</span>(mimeMessage, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">   helper.setSubject(<span class="string">&quot;通知-明天来狂神这听课&quot;</span>);</span><br><span class="line">   helper.setText(<span class="string">&quot;&lt;b style=&#x27;color:red&#x27;&gt;今天 7:30来开会&lt;/b&gt;&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//发送附件</span></span><br><span class="line">   helper.addAttachment(<span class="string">&quot;1.jpg&quot;</span>,<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>));</span><br><span class="line">   helper.addAttachment(<span class="string">&quot;2.jpg&quot;</span>,<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">   helper.setTo(<span class="string">&quot;24736743@qq.com&quot;</span>);</span><br><span class="line">   helper.setFrom(<span class="string">&quot;24736743@qq.com&quot;</span>);</span><br><span class="line"></span><br><span class="line">   mailSender.send(mimeMessage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">发送mail</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate Validator</title>
    <link href="https://qiqicsdn.github.io/posts/8899488c.html"/>
    <id>https://qiqicsdn.github.io/posts/8899488c.html</id>
    <published>2023-12-07T14:39:49.837Z</published>
    <updated>2023-12-07T14:39:49.837Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hibernate-Validator">Hibernate Validator</h2><h4 id="引入依赖">引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--web--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--校验依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="常用注解">常用注解</h4><table><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td><a href="/Nul">@Nul </a></td><td>被注释的元素必须为 null</td></tr><tr><td><a href="/NotNull">@NotNull </a></td><td>被注释的元素必须不为 null</td></tr><tr><td><a href="/AssertTrue">@AssertTrue </a></td><td>被注释的元素必须为 true</td></tr><tr><td><a href="/AssertFalse">@AssertFalse </a></td><td>被注释的元素必须为 false</td></tr><tr><td><a href="/value">@Min(value) </a></td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td><a href="/value">@Max(value) </a></td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td><a href="/value">@DecimalMin(value) </a></td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td><a href="/value">@DecimalMax(value) </a></td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@Size(max, min)</td><td>被注释的元素的大小必须在指定的范围内，元素必须为集合，代表集合个数</td></tr><tr><td>[@Pattern(regexp ](/Pattern(regexp )</td><td></td></tr><tr><td>= )</td><td>正则表达式校验</td></tr><tr><td><a href="/Digits">@Digits </a></td><td></td></tr><tr><td>(integer, fraction)</td><td>被注释的元素必须是一个数字，其值必须在可接受的范围内</td></tr><tr><td><a href="/Past">@Past </a></td><td>被注释的元素必须是一个过去的日期</td></tr><tr><td><a href="/Future">@Future </a></td><td>被注释的元素必须是一个将来的日期</td></tr><tr><td><a href="/Email">@Email </a></td><td>被注释的元素必须是电子邮箱地址</td></tr><tr><td>@Length(min=, max=)</td><td>被注释的字符串的大小必须在指定的范围内，必须为数组或者字符串，若微数组则表示为数组长度，字符串则表示为字符串长度</td></tr><tr><td><a href="/NotEmpty">@NotEmpty </a></td><td>被注释的字符串的必须非空</td></tr><tr><td>@Range(min=, max=)</td><td>被注释的元素必须在合适的范围内</td></tr><tr><td><a href="/NotBlank">@NotBlank </a></td><td>被注释的字符串的必须非空</td></tr><tr><td><a href="/URI">@URI </a></td><td>字符串是否是一个有效的URL</td></tr></tbody></table><h3 id="注意">注意</h3><ul><li><a href="/NotEmpty">@NotEmpty </a> 用在集合类上面</li><li><a href="/NotBlank">@NotBlank </a> 用在String上面</li><li><a href="/NotNull">@NotNull </a> 用在基本类型上</li></ul><h3 id="基本使用">基本使用</h3><h4 id="对象（entity）">对象（entity）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// @NotNull 不能为null</span></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;用户id不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @NotEmpty 不能为空，这里的空是指空字符串</span></span><br><span class="line">    <span class="meta">@NotEmpty(message = &quot;用户名不能为空&quot;)</span></span><br><span class="line">    <span class="comment">// @Length(min=,max=) 检查所属的字段的长度是否在min和max之间，只能用于字符串</span></span><br><span class="line">    <span class="meta">@Length(max = 50, message = &quot;用户名长度不能超过50&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Max(value = 80,message = &quot;年龄最大为80&quot;)</span></span><br><span class="line">    <span class="meta">@Min(value = 18,message = &quot;年龄最小为18&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @Pattern(regex=) 被注释的元素必须符合指定的正则表达式</span></span><br><span class="line">    <span class="meta">@Pattern(regexp = &quot;[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$&quot;,</span></span><br><span class="line"><span class="meta">            message = &quot;邮箱格式不正确&quot;)</span></span><br><span class="line">    <span class="comment">// @Email(message = &quot;请输入正确的邮箱&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"> <span class="meta">@Size(min = 2, max = 5, message = &quot;长度不符合要求&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@Min(value = 10, message = &quot;不合法年龄&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@NotNull(message = &quot;用户列表不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Valid</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</span><br><span class="line">    <span class="meta">@NotNull(message = &quot;订单信息不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Valid</span></span><br><span class="line">    <span class="keyword">private</span> Order order;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//内嵌的用户对象</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;地址不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String addr;</span><br><span class="line">    <span class="meta">@Email(message = &quot;邮箱格式不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//内嵌的订单对象</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Order</span> &#123;</span><br><span class="line">    <span class="meta">@DecimalMin(value = &quot;1.00&quot;, message = &quot;价格不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Controller层">Controller层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.itcast.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.itcast.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.annotation.Validated;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span> <span class="comment">// 开启hibernate-validator校验功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单数据类型校验，</span></span><br><span class="line">    <span class="comment">// 这里用@RequestMapping的原因是我们通过浏览器的方式进行测试，对请求方式没有要求，只要路径匹配即可</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">(<span class="meta">@NotBlank(message = &quot;id不能为空&quot;)</span> String id)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;delete...&quot;</span> + id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对象属性校验 @Validated</span></span><br><span class="line">    <span class="comment">// 这里用@RequestMapping的原因是我们通过浏览器的方式进行测试，对请求方式没有要求，只要路径匹配即可</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/save&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">save</span><span class="params">(<span class="meta">@Validated</span> User user)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;save...&quot;</span> + user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hibernate Validator</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>IDEA</title>
    <link href="https://qiqicsdn.github.io/posts/3c1e27f1.html"/>
    <id>https://qiqicsdn.github.io/posts/3c1e27f1.html</id>
    <published>2023-12-07T13:15:17.737Z</published>
    <updated>2023-12-07T13:15:17.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="IDEA配置">IDEA配置</h2><h3 id="调节颜色">调节颜色</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109141943280.png#id=fXFsz&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="忽略大小写">忽略大小写</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109142842731.png#id=dimvx&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="自动导包">自动导包</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109143112310.png#id=WDhUo&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="设置文件编码">设置文件编码</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109143221915.png#id=SJnmd&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="配置JDK版本">配置JDK版本</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109143730151.png#id=gNCze&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="序列化自动生成serialVersionUID">序列化自动生成serialVersionUID</h3><p>File --&gt; Settings --&gt; Editor --&gt; Inspections --&gt; Java --&gt; Serialization issues --&gt; 勾选Serializable class without ‘serialVersionUID’ 如下图所<br><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109144003598.png#id=ddirX&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="设置新项目打开方式">设置新项目打开方式</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109144211687.png#id=zCO9Y&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="设置exit">设置exit</h3><p>Settings→<a href="https://so.csdn.net/so/search?q=System&amp;spm=1001.2101.3001.7020">System</a> Settings→Startup/Shutdown<br><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109144312285.png#id=VNRau&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="注释设置">注释设置</h3><p><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230109155623368.png#id=Spl1N&amp;originHeight=879&amp;originWidth=1465&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h3 id="去除黄线警告">去除黄线警告</h3><p>第一步：取消勾选 No data sources configured<br>Editor ⇒ Inspections ⇒ SQL ⇒ No data sources configure<br><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230110095855599.png#id=KTw5E&amp;originHeight=887&amp;originWidth=1481&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""><br>第二步：去掉 SQL dialect is not configured 警告<br>在No data sources configure的下方，有个SQL dialect datection，取消勾选后apply<br><img src="https://cdn.staticaly.com/gh/qiqiCSDN/Cartographic_bed@main/2023/1image-20230110100225700.png#id=ShJri&amp;originHeight=887&amp;originWidth=1481&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=" alt=""></p><h1>IDEA插件</h1><p>在IDEA中，Ctrl + Alt + S 选择 Plugins，可以添加很多帮助我们开发的插件，这里推荐几个我个人认为比较实用的插件。<br>（插件虽好，可不能贪多哦，插件多了IDEA运行起来会很卡。）</p><h3 id="1-GitHub-Copilot">1.GitHub Copilot</h3><p>GitHub Copilot 是 GitHub 官方和 OpenAI联合发布一款 IDEA 插件，支持代码自动补全。<br>我们只需要编写好相关的方法名或注释，copilot 就会自动根据我们的描述提示代码。<br>注意：如果想用Copilot的话，需要将 IntelliJ IDEA 升级到 2021.2 或以上版本<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986565305-f9e302ca-a6ec-4b1d-91cf-87b1cd471d23.png#averageHue=%232e323a&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uf90ba3cd&amp;originHeight=1291&amp;originWidth=1451&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ua5f177ca-408d-4247-84b3-76d9b4747fa&amp;title=" alt=""><br>安装之后，会在下方有一个小机器人的标识，需要和 GitHub 账号进行绑定。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986565435-f3341655-1d36-4380-84da-6ddaf4fa1096.png#averageHue=%232f343d&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ud39e9111&amp;originHeight=305&amp;originWidth=574&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ub65dd744-81c6-46b0-8d09-7c48c2e5e18&amp;title=" alt=""><br>Tab：采用这段代码<br>Alt + [：切换上一条推荐<br>Alt + ]：切换下一条推荐<br>Esc：拒绝推荐<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986565357-e1676afa-48c9-4c01-907c-be67f01a2995.png#averageHue=%23212326&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u9ed63eaf&amp;originHeight=229&amp;originWidth=867&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ue28847c4-e227-407a-af91-4bc6d4a51bd&amp;title=" alt=""><br><strong>官网地址：</strong><a href="https://github.com/features/copilot/">https://github.com/features/copilot/</a><br>需要说明的是，这个插件需要绑定 paypal，前两个月是不收费的，后面会自动扣款。价格如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986565232-7f245d30-5a13-44d7-9b16-002319e0c501.png#averageHue=%2331363d&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uba0968aa&amp;originHeight=947&amp;originWidth=1795&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u2deeab49-833c-4fc3-a05a-65b17d915d1&amp;title=" alt=""></p><h3 id="2-MyBatisCodeHelperPro">2.MyBatisCodeHelperPro</h3><p>破解：（3.2.4以下）   <a href="http://ytxy.xyz/pages/e0c8bf/">http://ytxy.xyz/pages/e0c8bf/</a><br>（3.2.4以上） <a href="http://ytxy.xyz/pages/mchp_new/">http://ytxy.xyz/pages/mchp_new/</a><br>MyBatisCodeHelperPro 是国人开发的一款 MyBatis 开发辅助插件。功能丰富，包含了 MyBatisX 的 java 和 xml 文件互跳功能、xml 中字段提示功能、代码生成功能、xml 中 SQL 执行功能等。<img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986565217-3df1dc86-0c0a-49e1-9fd2-cb07a2682787.png#averageHue=%23303439&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uac957dde&amp;originHeight=1281&amp;originWidth=1511&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uda772def-70e5-41f1-a4e8-95ff60d26d0&amp;title=" alt=""><br>官方说明中已经包含了自动提示功能的截图，这里介绍一下 xml 中 SQL 执行功能。<br>安装插件之后，在 xml 文件的 SQL 语句左边会有一个执行按钮，<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986566531-e2937c9d-51c3-4366-a023-b99e9a78e98a.png#averageHue=%233a4839&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u0dae8447&amp;originHeight=448&amp;originWidth=1438&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u1f13b055-0803-4812-8e71-7952153b1b3&amp;title=" alt=""><br>点击执行按钮，如果需要入参，输入指定的入参，可以将 SQL 动态拼接好，如果有在 IDEA 中连接数据库，就可以直接在相应的数据库中执行。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986566488-aaef3b90-68ed-4e24-9998-ee11466e14e7.png#averageHue=%232c2e32&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u50ac8e4d&amp;originHeight=1491&amp;originWidth=1446&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ufd8521d2-70f9-4850-8acb-59c66a8d022&amp;title=" alt=""></p><h3 id="3-Maven-Helper">3.Maven Helper</h3><p>Maven Helper 是一款 Maven 依赖管理的辅助插件，主要方便我们处理依赖冲突。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986566519-ac7c532d-2a9b-4578-80ca-c09435c2df44.png#averageHue=%2331353a&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uafb7caf8&amp;originHeight=1282&amp;originWidth=1509&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ueca342d5-e900-44d1-a193-d081db83d89&amp;title=" alt=""><br>安装插件之后，会在 pom.xml 文件下方增加一栏 Dependency Analyzer。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986566492-92c8ccd3-4ca2-49c8-90a5-998fe905183b.png#averageHue=%232d2f33&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u823d8ac2&amp;originHeight=738&amp;originWidth=985&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u00ff084d-56b0-4f52-8b8d-45f38703d97&amp;title=" alt=""><br>如果 pom 中存在依赖冲突，这里会显示出来，我们可以选择查看冲突依赖的具体位置，或者直接排除。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986566489-46db8669-7c68-4995-8e5b-1862ae84dbae.png#averageHue=%232f3236&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u251e913a&amp;originHeight=892&amp;originWidth=1428&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u471e665a-32ef-4217-a53b-cb562276520&amp;title=" alt=""></p><h3 id="4-Translation">4.Translation</h3><p>Translation 是一款非常好用的翻译插件，阅读源码时可以将注释翻译成中文。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986567232-f33fb3c6-687e-4499-a38e-0fdce7f0880e.png#averageHue=%2335393e&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u834469e4&amp;originHeight=1253&amp;originWidth=1514&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uc36a34a5-4163-4929-99bb-bc46f92ac73&amp;title=" alt=""><br>这款软件在使用之前，需要先配置自己的翻译引擎信息。<br>Ctrl + Alt + S -&gt; Tools -&gt; Translation，选择配置。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986567269-71e2990c-ef0e-4e71-b4f5-9ae27625b3a2.png#averageHue=%232e3135&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ue55aeb3e&amp;originHeight=1459&amp;originWidth=1970&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u741ac2bb-b469-4c42-a3f1-7da61ed5177&amp;title=" alt=""><br>这里我们可以输入翻译引擎的配置信息，没有的话可以点击链接去免费申请。<br>申请有道翻译地址：<a href="https://ai.youdao.com/#/">https://ai.youdao.com/#/</a><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986567406-fee4d7d0-f8c2-426e-ae1b-3d6ca386b983.png#averageHue=%232f333b&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u1020374d&amp;originHeight=478&amp;originWidth=652&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ubbf68dd2-b52a-448d-aee8-284a06fc590&amp;title=" alt=""><br>登录之后，点击右上方进入个人中心。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986567762-734a56b5-742d-486c-9dcd-c1e7f8d83f7f.png#averageHue=%235184ea&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ua2c88904&amp;originHeight=1298&amp;originWidth=2560&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u6a2f87b9-36a6-4d0f-af78-b937bb01367&amp;title=" alt=""><br>点击 应用总览 -&gt; 创建应用<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986567768-27046a8f-bc1a-40ec-8318-5cc5df43dd0e.png#averageHue=%23eee797&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ued0c5cea&amp;originHeight=458&amp;originWidth=2560&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u4d886937-cf13-4dc9-acaf-51860c27fdd&amp;title=" alt=""><br>输入相关信息，点击 确定。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986568225-ee9de554-7fcb-4920-b742-ebe84abc265a.png#averageHue=%23e1cca9&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u3db402f0&amp;originHeight=1177&amp;originWidth=1598&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u92753dfa-7f9c-4e7f-817f-8d17ed2a7c6&amp;title=" alt=""><br>创建好之后，将我们的应用ID和密钥填到 IDEA 的配置中即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986568597-cf79d518-6077-4325-bf79-c9929ce6bddd.png#averageHue=%23e5c89b&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u79bed5fa&amp;originHeight=641&amp;originWidth=2560&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uc8bd4535-5719-450d-b9b2-03ce70135a5&amp;title=" alt=""><br>使用的时候可以选择想要翻译的文本，右键，选择 Translate Selection。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986568627-46158f30-8a30-4391-b14d-78a05702a713.png#averageHue=%2322252b&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uc0aedada&amp;originHeight=718&amp;originWidth=1629&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u7acea2f8-6919-4468-91e6-1ef053b56f6&amp;title=" alt=""><br>就可以看到翻译后的结果了。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986568900-ed1ace75-f48a-4e74-a538-6e4805dc4904.png#averageHue=%23262a31&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ubbbf2a62&amp;originHeight=547&amp;originWidth=1569&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u06ea82b9-2a9e-4c09-8072-1dd0af053b0&amp;title=" alt=""></p><h3 id="5-Api-Savior">5.Api Savior</h3><p>Api Savior 是一款接口文档导出插件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986569272-dad4542c-f59b-4371-bba3-2d8858fb8553.png#averageHue=%232d3238&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u157d24fc&amp;originHeight=1025&amp;originWidth=1501&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u7a686406-d7e4-4694-ae51-84538de982d&amp;title=" alt=""><br>我们可以在想要导出类名右键，选择 Generate Api Interface Doc，就会帮我们生成接口文档的 MarkDown 格式文件内容，也可以在包结构中右键批量导出。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986569426-0dbdadf7-0159-437e-ab82-e7060851e516.png#averageHue=%2327292e&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u1b96417d&amp;originHeight=813&amp;originWidth=1251&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uc8eb5ed0-54b5-4de7-9558-32ed509fcf6&amp;title=" alt=""><br>我们将弹窗中的内容，复制粘贴到 MarkDown 文件中即可。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986569700-57599580-d216-4f91-979a-2fa4edf36560.png#averageHue=%232f3540&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u7fe48a67&amp;originHeight=536&amp;originWidth=681&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=uacf1e4b0-2c86-43e0-b4a3-bc14abce181&amp;title=" alt=""><br>MarkDown中文件的展示效果如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986569710-60d0a267-1e7b-45f8-82be-f09140273b7b.png#averageHue=%23363a3e&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ua00036bc&amp;originHeight=1018&amp;originWidth=2158&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u9adcc8f5-93ab-4b0c-a7ca-2002800f997&amp;title=" alt=""><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986570112-96411a30-25b5-4998-b9a9-ceabc24f39b4.png#averageHue=%235f8560&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ue2e8a338&amp;originHeight=1018&amp;originWidth=2158&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u7302e173-24d8-479a-b64d-57660fed4b1&amp;title=" alt=""></p><h3 id="6-Alibaba-Java-Coding-Guidelines">6.Alibaba Java Coding Guidelines</h3><p>Alibaba Java Coding Guidelines 是一款基于 阿里规约 进行代码规范扫描的插件。可以帮助我们排查一些类似于空指针、代码重复等代码不规范问题。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986570225-99af0d59-6b23-4228-890b-1b65aac39d6a.png#averageHue=%232f333a&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u98a38b5b&amp;originHeight=714&amp;originWidth=1494&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ua2d5de96-c977-49e5-8c1d-d2ec1330ebd&amp;title=" alt=""></p><h3 id="7-Sequence-Diagram">7.Sequence Diagram</h3><p>Sequence Diagram 是一款将方法调用关系转换为时序图展示的插件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986570247-9a5fc2c9-7c05-40ed-8485-7866250cc75b.png#averageHue=%232f3339&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u273e258d&amp;originHeight=1213&amp;originWidth=1498&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u4fa7457a-12db-43db-85d5-b4ca29178ba&amp;title=" alt=""><br>无论是在我们接手别人的代码，还是阅读源码，都需要了解整个逻辑大致调用了哪些方法，就需要用到这个插件。<br>例如：我们用 IDEA 打开 JDK8 的源码包，定位到 HashMap 的 put() 方法，右键选择 Sequence Diagram<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986570595-f7a32929-5501-4a6d-bae2-91964f57e331.png#averageHue=%23212328&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u938ff7c1&amp;originHeight=555&amp;originWidth=1724&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u0efdb343-a2b5-4586-9b83-5e721d9177b&amp;title=" alt=""><br>我们可以点击具体的方法，就会跳转到相应的位置。<br>也可以对时序图的深度和展示内容进行设置。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986570737-b1c48a00-d375-4a46-b742-a1bb3af24edf.png#averageHue=%232d3033&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uf2222a62&amp;originHeight=528&amp;originWidth=1229&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ua8b3d9cd-7a40-4284-be66-a414a000e9e&amp;title=" alt=""><br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986571254-bfa6dd53-8279-4f9b-b45f-6aca4dd95204.png#averageHue=%2331363d&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u5dfcdaa4&amp;originHeight=406&amp;originWidth=715&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u53890c24-feca-44cd-a8da-2b62230f075&amp;title=" alt=""><br>还可以将时序图进行保存或导出。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986571178-bffe3dad-d1b0-40af-83f0-aafed79ff6a9.png#averageHue=%232d3034&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=uf1e0037b&amp;originHeight=502&amp;originWidth=1068&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ua38784a5-bc67-435e-9d6c-fb98118175d&amp;title=" alt=""></p><h3 id="8-Key-Promoter-X">8.Key Promoter X</h3><p>Key Promoter X 是一款帮助我们学习和掌握快捷键的插件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986571506-74137e21-9d7f-4441-a935-df68dd37b79e.png#averageHue=%232e3137&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u641caaed&amp;originHeight=1276&amp;originWidth=1514&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u0d3e2542-829a-4cd1-afb0-7c2a6126009&amp;title=" alt=""></p><h3 id="9-Restfultoolkit-fix">9.Restfultoolkit-fix</h3><p>Restfultoolkit-fix 是一套 RESTful 服务开发辅助工具集插件。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986571699-3256dcd8-2eb6-4999-a1fd-5d188eb7e6e8.png#averageHue=%2330343b&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u4c5c5acf&amp;originHeight=919&amp;originWidth=1519&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u9b9c5fd8-7bd1-46e6-85a9-f77d9045e11&amp;title=" alt=""><br>我们在接口右键，可以根据需要进行如下操作：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986571985-b6489c1c-85e4-420c-8444-cfa0c2326bfc.png#averageHue=%23292c30&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=ubdf73e3c&amp;originHeight=1096&amp;originWidth=1297&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u7e3a97f6-b28f-4b18-ad2f-23cc3c134c4&amp;title=" alt=""></p><ul><li>生成并复制 query 类型的查询参数。type=1&amp;username=ACGkaka</li><li>生成并复制请求体。</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pageNum&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pageSize&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>生成并复制相对路径URL/user/list</li><li>生成并复制绝对路径URLhttp://localhost:8081/user/list</li></ul><h3 id="10-CamelCase">10.CamelCase</h3><p>CamelCase 可以轻松地将各种不同格式转换成指定的格式 支持格式: foo_bar, fooBar, FooBar, FOO_BAR 支持自定义快键 支持同时转换多个块的文本内容。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/29786728/1696986572078-f15397b3-efa9-4d44-a4b9-a27dd298da24.png#averageHue=%2330333a&amp;clientId=u0813ce58-ebd8-4&amp;from=paste&amp;id=u95f86c78&amp;originHeight=1029&amp;originWidth=1507&amp;originalType=url&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ufb6e8644-aaae-48ba-8b56-5860aa8d8cd&amp;title=" alt=""><br>安装后重新打开idea,选中内容，快捷键 shit+alt+u，选中内容中的单词 就会变，直到变成你想要的。<br>整理完毕，完结撒花~ 🌻</p>]]></content>
    
    
    <summary type="html">IDEA</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Map与List互转</title>
    <link href="https://qiqicsdn.github.io/posts/3c1e27f1.html"/>
    <id>https://qiqicsdn.github.io/posts/3c1e27f1.html</id>
    <published>2023-12-07T13:14:04.871Z</published>
    <updated>2023-12-07T13:14:04.871Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Map转List">Map转List</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例子</span></span><br><span class="line">Map&lt;Integer, String&gt; mapDemo = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">      map.put(<span class="number">10</span>, <span class="string">&quot;apple&quot;</span>);</span><br><span class="line">      map.put(<span class="number">20</span>, <span class="string">&quot;orange&quot;</span>);</span><br><span class="line">      map.put(<span class="number">30</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line">      map.put(<span class="number">40</span>, <span class="string">&quot;watermelon&quot;</span>);</span><br><span class="line">      map.put(<span class="number">50</span>, <span class="string">&quot;dragonfruit&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Map-Integer-Object-转-List">Map&lt;Integer, Object&gt; 转 List</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line">List&lt;Integer&gt; list1 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>(mapDemo.keySet());</span><br><span class="line"><span class="comment">//方法2</span></span><br><span class="line">List&lt;Integer&gt; list2 = mapDemo.keySet().stream().collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h3 id="Map-Integer-Object-转-List-2">Map&lt;Integer, Object&gt; 转 List</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1</span></span><br><span class="line"> List&lt;String&gt; list3 = <span class="keyword">new</span> <span class="title class_">ArrayList</span>(mapDemo.values());</span><br><span class="line"> <span class="comment">//方法2</span></span><br><span class="line"> List&lt;String&gt; list4 = mapDemo.values().stream().collect(Collectors.toList());</span><br></pre></td></tr></table></figure><h2 id="List转Map">List转Map</h2><h3 id="第一种（会出现键重复异常）">第一种（会出现键重复异常）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//以id为主键转为map</span></span><br><span class="line">Map&lt;Long, User&gt; map = list.stream().collect(Collectors.toMap(User::getId,Function.identity()));</span><br></pre></td></tr></table></figure><h3 id="第二种（针对第一种方法会出现情况）">第二种（针对第一种方法会出现情况）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给出key重复时，使用哪个key作为主键，以下代码中的(key1, key2) -&gt; key2)代表key1和key2键重复时返回key2做主键</span></span><br><span class="line">Map&lt;Long, User&gt; map = list.stream().collect(Collectors.toMap(User::getId, Function.identity(), (key1, key2) -&gt; key2));</span><br></pre></td></tr></table></figure><h3 id="第三种（只返回对象里某个属性时）">第三种（只返回对象里某个属性时）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不想返回对象，只返回对象里某个属性时 采用这种方式</span></span><br><span class="line">Map&lt;Long, String&gt; map = list.stream().collect(Collectors.toMap(User::getId, User::getAge, (key1, key2) -&gt; key2));</span><br></pre></td></tr></table></figure><h3 id="第四种（以某个属性分组）">第四种（以某个属性分组）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;Integer, List&gt; map = list.stream().collect(Collectors.groupingBy(User::getId));</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Map与List互转</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot里参数校验参数验证</title>
    <link href="https://qiqicsdn.github.io/posts/25d579af.html"/>
    <id>https://qiqicsdn.github.io/posts/25d579af.html</id>
    <published>2023-12-07T13:13:33.411Z</published>
    <updated>2023-12-07T13:13:33.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringBoot里参数校验-参数验证">SpringBoot里参数校验/参数验证</h2><h3 id="1、前言">1、前言</h3><p>在控制器类的方法里自己写校验逻辑代码当然也可以，只是代码比较丑陋，有点“low”。业界有更好的处理方法，分别阐述如下。</p><h3 id="2、PathVariable校验">2、PathVariable校验</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/path/&#123;group:[a-zA-Z0-9_]+&#125;/&#123;userid&#125;&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">path</span><span class="params">(<span class="meta">@PathVariable(&quot;group&quot;)</span> String group, <span class="meta">@PathVariable(&quot;userid&quot;)</span> Integer userid)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> group + <span class="string">&quot;:&quot;</span> + userid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用法是：路径变量:正则表达式。当请求URI不满足正则表达式时，客户端将收到404错误码。不方便的地方是，不能通过捕获异常的方式，向前端返回统一的、自定义格式的响应参数。</p><h4 id="3、方法参数校验">3、方法参数校验</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/validate1&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">validate1</span><span class="params">(</span></span><br><span class="line"><span class="params">        <span class="meta">@Size(min = 1,max = 10,message = &quot;姓名长度必须为1到10&quot;)</span><span class="meta">@RequestParam(&quot;name&quot;)</span> String name,</span></span><br><span class="line"><span class="params">        <span class="meta">@Min(value = 10,message = &quot;年龄最小为10&quot;)</span><span class="meta">@Max(value = 100,message = &quot;年龄最大为100&quot;)</span> <span class="meta">@RequestParam(&quot;age&quot;)</span> Integer age)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;validate1&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果前端传递的参数不满足规则，则抛出异常。注解Size、Min、Max来自validation-api.jar，更多注解参见相关标准小节。</p><h3 id="4、表单对象-VO对象校验">4、表单对象/VO对象校验</h3><p>当参数是VO时，可以在VO类的属性上添加校验注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@Size(min = 1,max = 10,message = &quot;姓名长度必须为1到10&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotEmpty</span></span><br><span class="line">    <span class="keyword">private</span> String firstName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Min(value = 10,message = &quot;年龄最小为10&quot;)</span><span class="meta">@Max(value = 100,message = &quot;年龄最大为100&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Future</span></span><br><span class="line">    <span class="meta">@JSONField(format=&quot;yyyy-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，Future注解要求必须是相对当前时间来讲“未来的”某个时间。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/validate2&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">validate2</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、自定义校验规则">5、自定义校验规则</h3><h4 id="5-1-自定义注解校验">5.1 自定义注解校验</h4><p>需要自定义一个注解类和一个校验类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.validation.Constraint;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Payload;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.PARAMETER,ElementType.FIELD&#125;)</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = FlagValidatorClass.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> FlagValidator &#123;</span><br><span class="line">    <span class="comment">// flag的有效值，多个使用,隔开</span></span><br><span class="line">    String <span class="title function_">values</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// flag无效时的提示内容</span></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;flag必须是预定义的那几个值，不能随便写&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidator;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintValidatorContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FlagValidatorClass</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;FlagValidator,Object&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * FlagValidator注解规定的那些有效值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String values;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(FlagValidator flagValidator)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.values = flagValidator.values();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户输入的值，必须是FlagValidator注解规定的那些值其中之一。</span></span><br><span class="line"><span class="comment">     * 否则，校验不通过。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 用户输入的值，如从前端传入的某个值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Object value, ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line">        <span class="comment">// 切割获取值</span></span><br><span class="line">        String[] value_array = values.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">isFlag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; value_array.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 存在一致就跳出循环</span></span><br><span class="line">            <span class="keyword">if</span> (value_array[i] .equals(value))&#123;</span><br><span class="line">                isFlag = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> isFlag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>使用我们自定义的注解：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// 前端传入的flag值必须是1或2或3，否则校验失败</span></span><br><span class="line">    <span class="meta">@FlagValidator(values = &quot;1,2,3&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String flag ;</span><br><span class="line">    。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-分组校验">5.2 分组校验</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.hibernate.validator.constraints.Length;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Min;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Resume</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Default</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Update</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;id不能为空&quot;, groups = Update.class)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;名字不能为空&quot;, groups = Default.class)</span></span><br><span class="line">    <span class="meta">@Length(min = 4, max = 10, message = &quot;name 长度必须在 &#123;min&#125; - &#123;max&#125; 之间&quot;, groups = Default.class)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;年龄不能为空&quot;, groups = Default.class)</span></span><br><span class="line">    <span class="meta">@Min(value = 18, message = &quot;年龄不能小于18岁&quot;, groups = Default.class)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Defaul分组进行验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resume</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/validate5&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">addUser</span><span class="params">(<span class="meta">@Validated(value = Resume.Default.class)</span> <span class="meta">@RequestBody</span> Resume resume)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;validate5&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用Default、Update分组进行验证</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> resume</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PutMapping(&quot;/validate6&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">updateUser</span><span class="params">(<span class="meta">@Validated(value = &#123;Resume.Update.class, Resume.Default.class&#125;)</span> <span class="meta">@RequestBody</span> Resume resume)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;validate6&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立了两个分组，名称分别为Default、Update。POST方法提交时使用Defaut分组的校验规则，PUT方法提交时同时使用两个分组规则。</p><h3 id="6、异常拦截器">6、异常拦截器</h3><p>通过设置全局异常处理器，统一向前端返回校验失败信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.scj.springbootdemo.WebResult;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.ObjectError;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.MethodArgumentNotValidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolation;</span><br><span class="line"><span class="keyword">import</span> javax.validation.ConstraintViolationException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局异常处理器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(GlobalExceptionHandler.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用来处理bean validation异常</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(ConstraintViolationException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span>  WebResult <span class="title function_">resolveConstraintViolationException</span><span class="params">(ConstraintViolationException ex)</span>&#123;</span><br><span class="line">        <span class="type">WebResult</span> <span class="variable">errorWebResult</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebResult</span>(WebResult.FAILED);</span><br><span class="line">        Set&lt;ConstraintViolation&lt;?&gt;&gt; constraintViolations = ex.getConstraintViolations();</span><br><span class="line">        <span class="keyword">if</span>(!CollectionUtils.isEmpty(constraintViolations))&#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">msgBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span>(ConstraintViolation constraintViolation :constraintViolations)&#123;</span><br><span class="line">                msgBuilder.append(constraintViolation.getMessage()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">errorMessage</span> <span class="operator">=</span> msgBuilder.toString();</span><br><span class="line">            <span class="keyword">if</span>(errorMessage.length()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                errorMessage = errorMessage.substring(<span class="number">0</span>,errorMessage.length()-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            errorWebResult.setInfo(errorMessage);</span><br><span class="line">            <span class="keyword">return</span> errorWebResult;</span><br><span class="line">        &#125;</span><br><span class="line">        errorWebResult.setInfo(ex.getMessage());</span><br><span class="line">        <span class="keyword">return</span> errorWebResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> WebResult <span class="title function_">resolveMethodArgumentNotValidException</span><span class="params">(MethodArgumentNotValidException ex)</span>&#123;</span><br><span class="line">        <span class="type">WebResult</span> <span class="variable">errorWebResult</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebResult</span>(WebResult.FAILED);</span><br><span class="line">        List&lt;ObjectError&gt;  objectErrors = ex.getBindingResult().getAllErrors();</span><br><span class="line">        <span class="keyword">if</span>(!CollectionUtils.isEmpty(objectErrors)) &#123;</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">msgBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">            <span class="keyword">for</span> (ObjectError objectError : objectErrors) &#123;</span><br><span class="line">                msgBuilder.append(objectError.getDefaultMessage()).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">String</span> <span class="variable">errorMessage</span> <span class="operator">=</span> msgBuilder.toString();</span><br><span class="line">            <span class="keyword">if</span> (errorMessage.length() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                errorMessage = errorMessage.substring(<span class="number">0</span>, errorMessage.length() - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            errorWebResult.setInfo(errorMessage);</span><br><span class="line">            <span class="keyword">return</span> errorWebResult;</span><br><span class="line">        &#125;</span><br><span class="line">        errorWebResult.setInfo(ex.getMessage());</span><br><span class="line">        <span class="keyword">return</span> errorWebResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、相关标准与依赖">7、相关标准与依赖</h3><p>包含 javax.validation.constraints 、org.hibernate.validator.constraints</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是Bean验证的规范 ，<br>是该规范的参考实现，它除了实现规范要求的注解外，还额外实现了一些注解。<br>validation-api-1.1.0.jar 包括如下约束注解：</p><table><thead><tr><th>约束注解</th><th>针对类型</th><th>说明</th></tr></thead><tbody><tr><td><a href="/AssertFalse">@AssertFalse </a></td><td>布尔</td><td>被注释的元素必须为 false</td></tr><tr><td><a href="/AssertTrue">@AssertTrue </a></td><td>布尔</td><td>被注释的元素必须为 true</td></tr><tr><td><a href="/value">@DecimalMax(value) </a></td><td></td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td><a href="/value">@DecimalMin(value) </a></td><td></td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td><a href="/Digits">@Digits </a></td><td></td><td></td></tr><tr><td>(integer, fraction)</td><td></td><td>被注释的元素必须是一个数字，其值必须在可接受的范围内</td></tr><tr><td><a href="/Null">@Null </a></td><td>对象</td><td>被注释的元素必须为 null</td></tr><tr><td><a href="/NotNull">@NotNull </a></td><td>对象</td><td>被注释的元素必须不为 null</td></tr><tr><td><a href="/value">@Min(value) </a></td><td>物资</td><td>被注释的元素必须是一个数字，其值必须大于等于指定的最小值</td></tr><tr><td><a href="/value">@Max(value) </a></td><td>数字</td><td>被注释的元素必须是一个数字，其值必须小于等于指定的最大值</td></tr><tr><td>@Size(max, min)</td><td>集合、数组、字符串</td><td>被注释的元素的大小必须在指定的范围内</td></tr><tr><td><a href="/Past">@Past </a></td><td>日期</td><td>被注释的元素必须是一个过去的日期</td></tr><tr><td><a href="/Future">@Future </a></td><td>日期</td><td>被注释的元素必须是一个将来的日期</td></tr><tr><td><a href="/value">@Pattern(value) </a></td><td>对象</td><td>被注释的元素必须符合指定的正则表达式</td></tr></tbody></table><p><strong>hibernate-validator-5.3.6.jar 包括如下约束注解：</strong></p><table><thead><tr><th>约束注解</th><th>针对类型</th><th>说明</th></tr></thead><tbody><tr><td><a href="/Email">@Email </a></td><td>字符串</td><td>被注释的元素必须是电子邮箱地址</td></tr><tr><td><a href="/Length">@Length </a></td><td>字符串</td><td>被注释的字符串的大小必须在指定的范围内</td></tr><tr><td><a href="/NotBlank">@NotBlank </a></td><td>字符串</td><td>被注释的字符串的必须非空</td></tr><tr><td><a href="/NotEmpty">@NotEmpty </a></td><td>字符串、集合、数组</td><td>被注释的字符串、集合、Map、数组必须非空</td></tr><tr><td><a href="/Range">@Range </a></td><td>数字、字符串</td><td>被注释的元素必须在合适的范围内</td></tr><tr><td><a href="/SafeHtml">@SafeHtml </a></td><td>字符串</td><td>被注释的元素必须是安全Html</td></tr><tr><td><a href="/URL">@URL </a></td><td>字符串</td><td>被注释的元素必须是有效URL</td></tr></tbody></table><h3 id="8、参数校验原理">8、参数校验原理</h3><p>这篇文章 写得比较深入，我没有太理解。</p><h3 id="9、本文源码">9、本文源码</h3><p>公司不让上传源码到GitHub，可以参加这篇文章。</p><h3 id="10、同时校验2个或更多个字段-参数">10、同时校验2个或更多个字段/参数</h3><p>常见的场景之一是，查询某信息时要输入开始时间和结束时间。显然，结束时间要≥开始时间。可以在查询VO类上使用自定义注解，下面的例子来自这里。划重点：@ValidAddress使用在类上。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ValidAddress</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Size(max = 50)</span></span><br><span class="line">    <span class="keyword">private</span> String street1;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Size(max = 50)</span></span><br><span class="line">    <span class="keyword">private</span> String street2;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Size(max = 10)</span></span><br><span class="line">    <span class="keyword">private</span> String zipCode;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Size(max = 20)</span></span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Valid</span></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Country country;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Getters and setters</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Country</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="meta">@Size(min = 2, max = 2)</span></span><br><span class="line">    <span class="keyword">private</span> String iso2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Getters and setters</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Target(TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RUNTIME)</span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123; MultiCountryAddressValidator.class &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ValidAddress &#123;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&#123;com.example.validation.ValidAddress.message&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MultiCountryAddressValidator</span> </span><br><span class="line">       <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;ValidAddress, Address&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">(ValidAddress constraintAnnotation)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(Address address, </span></span><br><span class="line"><span class="params">                           ConstraintValidatorContext constraintValidatorContext)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Country</span> <span class="variable">country</span> <span class="operator">=</span> address.getCountry();</span><br><span class="line">        <span class="keyword">if</span> (country == <span class="literal">null</span> || country.getIso2() == <span class="literal">null</span> || address.getZipCode() == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (country.getIso2()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;FR&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="comment">// Check if address.getZipCode() is valid for France</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;GR&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="comment">// Check if address.getZipCode() is valid for Greece</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">SpringBoot里参数校验参数验证</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Stream多字段排序</title>
    <link href="https://qiqicsdn.github.io/posts/d10c6b9a.html"/>
    <id>https://qiqicsdn.github.io/posts/d10c6b9a.html</id>
    <published>2023-12-07T13:12:13.587Z</published>
    <updated>2023-12-07T13:12:13.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Stream多字段排序">Stream多字段排序</h2><p>很多情况下sql不好解决的多表查询,临时表分组,排序,尽量用java8新特性stream进行处理<br>使用java8新特性,下面先来点基础的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">List&lt;类&gt; list; 代表某集合</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一升序排序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一));</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一降序排序 注意两种写法</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).reversed());<span class="comment">//先以属性一升序,结果进行属性一降序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一,Comparator.reverseOrder()));<span class="comment">//以属性一降序</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一升序 属性二升序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).thenComparing(类::属性二));</span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一降序 属性二升序 注意两种写法</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).reversed().thenComparing(类::属性二));<span class="comment">//先以属性一升序,升序结果进行属性一降序,再进行属性二升序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一,Comparator.reverseOrder()).thenComparing(类::属性二));<span class="comment">//先以属性一降序,再进行属性二升序</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一降序 属性二降序 注意两种写法</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).reversed().thenComparing(类::属性二,Comparator.reverseOrder()));<span class="comment">//先以属性一升序,升序结果进行属性一降序,再进行属性二降序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一,Comparator.reverseOrder()).thenComparing(类::属性二,Comparator.reverseOrder()));<span class="comment">//先以属性一降序,再进行属性二降序</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//返回 对象集合以类属性一升序 属性二降序 注意两种写法</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).reversed().thenComparing(类::属性二).reversed());<span class="comment">//先以属性一升序,升序结果进行属性一降序,再进行属性二升序,结果进行属性一降序属性二降序</span></span><br><span class="line"> </span><br><span class="line">list.stream().sorted(Comparator.comparing(类::属性一).thenComparing(类::属性二,Comparator.reverseOrder()));<span class="comment">//先以属性一升序,再进行属性二降序&lt;br&gt;&lt;br&gt;&lt;br&gt;</span></span><br></pre></td></tr></table></figure><p>通过以上例子我们可以发现</p><p>Comparator.comparing(类::属性一).reversed();<br>Comparator.comparing(类::属性一,Comparator.reverseOrder());</p><p>两种排序是完全不一样的,一定要区分开来 1 是得到排序结果后再排序,2 是直接进行排序,很多人会混淆导致理解出错,2更好理解,建议使用2<br>实际例子:<br>现有一个类test 有两个属性:state 状态 time 时间,需要状态顺序且时间倒序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="comment">//状态</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> state;</span><br><span class="line">    <span class="comment">//时间</span></span><br><span class="line">    <span class="keyword">private</span> Date time;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> state, Date time)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.state = state;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getState</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setState</span><span class="params">(<span class="type">int</span> state)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTime</span><span class="params">(Date time)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;test&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;state=&quot;</span> + state +</span><br><span class="line">                <span class="string">&quot;, time=&quot;</span> + DateUtils.formatDateYMD(time) +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">testRun</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;test&gt; testList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Date</span> <span class="variable">d</span> <span class="operator">=</span> DateUtils.now();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="type">test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">test</span>(i, DateUtils.addDays(d, i));</span><br><span class="line">            testList.add(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="type">test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">test</span>(i, DateUtils.addMonths(d, i));</span><br><span class="line">            testList.add(t);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        testList.forEach(o -&gt; &#123;</span><br><span class="line">            System.out.println(o.toString());</span><br><span class="line">        &#125;);</span><br><span class="line">        List&lt;test&gt; sort = testList.stream().sorted(Comparator.comparing(test::getState).thenComparing(test::getTime,Comparator.reverseOrder())).collect(toList());</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------------&quot;</span>);</span><br><span class="line">        sort.forEach(o -&gt; &#123;</span><br><span class="line">            System.out.println(o.toString());</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">排序前:</span><br><span class="line">test&#123;state=<span class="number">1</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">24</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">2</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">25</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">3</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">26</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">1</span>, time=<span class="number">2019</span>-08-<span class="number">23</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">2</span>, time=<span class="number">2019</span>-09-<span class="number">23</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">3</span>, time=<span class="number">2019</span>-<span class="number">10</span>-<span class="number">23</span>&#125;</span><br><span class="line">------------------------------------</span><br><span class="line">排序后:</span><br><span class="line">test&#123;state=<span class="number">1</span>, time=<span class="number">2019</span>-08-<span class="number">23</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">1</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">24</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">2</span>, time=<span class="number">2019</span>-09-<span class="number">23</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">2</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">25</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">3</span>, time=<span class="number">2019</span>-<span class="number">10</span>-<span class="number">23</span>&#125;</span><br><span class="line">test&#123;state=<span class="number">3</span>, time=<span class="number">2019</span>-<span class="number">07</span>-<span class="number">26</span>&#125;</span><br><span class="line"> </span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Stream多字段排序</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>后端项目搭建</title>
    <link href="https://qiqicsdn.github.io/posts/38a355ba.html"/>
    <id>https://qiqicsdn.github.io/posts/38a355ba.html</id>
    <published>2023-12-07T13:11:24.478Z</published>
    <updated>2023-12-07T13:11:24.478Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>后端项目采用多模块项目模式来进行编写</p></blockquote><h2 id="1、新建父模块项目">1、新建父模块项目</h2><h3 id="1-1、SpringBoot项目新建">1.1、SpringBoot项目新建</h3><blockquote><p>Name：MuZiNan-Server =&gt; [项目名称]<br>Location：D:\project\many\MuZiNan-Server =&gt; [项目位置 ]<br>Jdk：1.8 =&gt; [版本]<br>packing：jar =&gt; [打包方式]</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081555130.png" alt=""></p><blockquote><p>springboot版本随意，先选择一个web依赖即可！</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081555765.png" alt=""></p><h3 id="1-2、maven信息配制">1.2、maven信息配制</h3><blockquote><p>IDEA默认maven配制下载速度<strong>极慢</strong>，我们将其修改为我们自己的配置。<br>Maven home path: <strong>Maven安装位置</strong><br>User setting file: <strong>setting.xml文件位置</strong><br>Local respository：<strong>依赖存放仓库位置</strong></p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081555478.png" alt=""></p><h3 id="1-3、删除多余文件">1.3、删除多余文件</h3><blockquote><p>除了pom.xml文件保留，其他文件全部删除</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081555866.png" alt=""></p><blockquote><p>删除完毕之后</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081555197.png" alt=""></p><h3 id="1-4、pom-xml修改">1.4、pom.xml修改</h3><blockquote><p>1、SpringBoot版本修改为 2.5.5版本<br>2、项目基本信息修改<br>3、版本控制 依赖的版本管理通过properties内部进行控制<br>4、依赖管理 [<strong>dependencyManagement</strong>]<br>使用dependencyManagement包裹dependencies，这样可以做到依赖的声明，但是不引用。</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556698.png" alt=""></p><h3 id="1-5、pom-xml文件">1.5、pom.xml文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- SpringBoot 版本 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- 木字楠服务基本信息 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>space.muzinan<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>MuZiNan-Server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>MuZiNan-Server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>木字楠博客后台服务~<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- 版本控制 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--===================== SpringBoot相关依赖版本  =========================--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springboot.version</span>&gt;</span>2.5.5<span class="tag">&lt;/<span class="name">springboot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- 依赖管理 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--===================== SpringBoot相关依赖  =========================--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Web模块 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 测试模块 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、新建子模块项目">2、新建子模块项目</h2><blockquote><p>右击父级项目<br>New -&gt; Module</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556930.png" alt=""></p><h3 id="2-1、Web模块-interface模块">2.1、Web模块[interface模块]</h3><blockquote><p>新建一个maven项目<br>父级模块选用MuZiNan-Server<br>Jdk版本与父级保持一致<br>GroupId、ArtifactId 默认即可</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556416.png" alt=""></p><blockquote><p>新建成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556274.png" alt=""></p><h3 id="2-2、Business模块-service模块">2.2、Business模块[service模块]</h3><blockquote><p>新建一个maven项目<br>父级模块选用MuZiNan-Server<br>Jdk版本与父级保持一致<br>GroupId、ArtifactId 默认即可</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556929.png" alt=""></p><blockquote><p>新建成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556535.png" alt=""></p><h3 id="2-3、Mapper模块-dao模块">2.3、Mapper模块[dao模块]</h3><blockquote><p>新建一个maven项目<br>父级模块选用MuZiNan-Server<br>Jdk版本与父级保持一致<br>GroupId、ArtifactId 默认即可</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556128.png" alt=""></p><blockquote><p>新建成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556572.png" alt=""></p><h3 id="2-4、Api模块-实体类存放">2.4、Api模块[实体类存放]</h3><blockquote><p>新建一个maven项目<br>父级模块选用MuZiNan-Server<br>Jdk版本与父级保持一致<br>GroupId、ArtifactId 默认即可</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556239.png" alt=""></p><blockquote><p>新建成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556071.png" alt=""></p><h3 id="2-5、common模块-共用类存放">2.5、common模块[共用类存放]</h3><blockquote><p>新建一个maven项目<br>父级模块选用MuZiNan-Server<br>Jdk版本与父级保持一致<br>GroupId、ArtifactId 默认即可</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556631.png" alt=""></p><blockquote><p>新建成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556853.png" alt=""></p><h2 id="3、模块依赖关系配制">3、模块依赖关系配制</h2><h3 id="3-1、保留web模块主启动类">3.1、保留web模块主启动类</h3><blockquote><p>只保留web模块中的主启动类，删除其他模块的主启动类（多模块项目仅需要一个主启动类）</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556397.png" alt=""></p><blockquote><p>修改主启动类名称（当然也可以不修改，单纯觉得Main很难看，不像是SPringBoot项目）</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081556144.png" alt=""></p><h3 id="3-2、模块依赖引入">3.2、模块依赖引入</h3><blockquote><p>项目中的<strong>各个模块</strong>的职能：<br>web模块： 服务的<strong>接口入口</strong>，也就是存放<strong>Controller</strong>以及<strong>runne</strong>r等…<br>business模块： 存放<strong>业务具体的实现类</strong>的位置以及相关<strong>配置信息</strong>等…<br>mapper模块： 存放<strong>Mapper接口</strong>以及部分<strong>配置信息</strong>等…<br>api模块： 存放<strong>实体类</strong>、<strong>api接口</strong>以及<strong>request</strong>等信息…<br>common模块： 存放共用<strong>工具类</strong>，<strong>共用服务</strong>等…</p></blockquote><blockquote><p>根据<strong>MVC思想</strong>，我们正常的思路是通过controller来调用<strong>service</strong>层，然后通过<strong>service</strong>层调用dao层来实现一个<strong>具体的业务</strong>。<br><strong>多模块</strong>项目也是如此，只不过各个部分被<strong>分割为不同模块</strong>，我们需要使用<strong>依赖引入</strong>的方式来联通各个模块，是<strong>各个模块之间</strong>可以进行调用</p></blockquote><blockquote><p>引入顺序：web模块 引入 business模块（这样controller中可以调用business中的具体实现类）<br>business模块 引入 mapper模块（business引入了mapper，controller可以间接调用mapper）<br>mapper模块 引入 api模块（同上）<br>api模块 引入 common模块（同上）</p></blockquote><blockquote><p>${parent.groupId}：父级模块的groupId<br>${parent.version}：父级模块的version</p></blockquote><h4 id="3-2-1、web模块pom-xml">3.2.1、web模块pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Business模块引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$&#123;parent.groupId&#125;<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>muzinan-business<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-2、business模块pom-xml">3.2.2、business模块pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Mapper模块引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$&#123;parent.groupId&#125;<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>muzinan-mapper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-3、mapper模块pom-xml">3.2.3、mapper模块pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Api模块引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$&#123;parent.groupId&#125;<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>muzinan-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-4、api模块pom-xml">3.2.4、api模块pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Common模块引入 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$&#123;parent.groupId&#125;<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>muzinan-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;parent.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-2-5、依赖引入成功">3.2.5、依赖引入成功</h4><blockquote><p>依赖引入成功，这样我们的几个模块以及相互引入成功</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557071.png" alt=""></p><h3 id="3-3、基础spring依赖引入">3.3、基础spring依赖引入</h3><blockquote><p>因为我们<strong>所有模块</strong>都需要使用<strong>spring依赖信息</strong>，所有我们会将<strong>所有的基础依赖</strong>在<strong>common模块</strong>进行引入。</p></blockquote><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557502.png" alt=""></p><h2 id="4、启动项目">4、启动项目</h2><h3 id="4-1、Web模块配制文件配制">4.1、Web模块配制文件配制</h3><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557332.png" alt=""></p><h3 id="4-2、主启动类配制">4.2、主启动类配制</h3><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557576.png" alt=""></p><h3 id="4-3、启动项目">4.3、启动项目</h3><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557070.png" alt=""></p><p><img src="https://raw.gitmirror.com/qiqiCSDN/pic_img/main/image/202312081557309.png" alt=""></p>]]></content>
    
    
    <summary type="html">后端项目搭建</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>时间自动填充</title>
    <link href="https://qiqicsdn.github.io/posts/431d6fb7.html"/>
    <id>https://qiqicsdn.github.io/posts/431d6fb7.html</id>
    <published>2023-12-07T13:10:47.258Z</published>
    <updated>2023-12-07T13:10:47.258Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自动填充数据功能与逻辑删除">自动填充数据功能与逻辑删除</h2><p>（1）简介<br>添加、修改数据时，每次都会使用相同的方式进行填充。比如 数据的创建时间、修改时间等。<br><code>Mybatis-plus</code> 支持自动填充这些字段的数据。<br>给之前的数据表新增两个字段：创建时间、修改时间、逻辑删除。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> sys_user</span><br><span class="line">(</span><br><span class="line">    id <span class="type">BIGINT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">INT</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;年龄&#x27;</span>,</span><br><span class="line">    `sex` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;性别(女:0,男:1)&#x27;</span>,</span><br><span class="line">    username <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;账号&#x27;</span>,</span><br><span class="line">    password <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">    `create_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `update_time` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">    `is_deleted` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;删除状态(否:0,是:1)&#x27;</span>,</span><br><span class="line">    <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>（2）使用自动填充功能与逻辑删除。<br>   Step1：使用 <code>@TableField</code> 注解，标注需要进行填充的字段。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 最后修改时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line"><span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 逻辑删除（0 未删除、1 删除）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@TableLogic(value = &quot;0&quot;, delval = &quot;1&quot;)</span></span><br><span class="line"><span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line"><span class="keyword">private</span> Integer isDeleted;</span><br></pre></td></tr></table></figure><p>Step2：自定义一个类(为该类创建一个hander包)，实现 <code>MetaObjectHandler</code>接口，并重写方法。<br>   添加 <code>@Component</code> 注解，交给 Spring 去管理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;createTime&quot;</span>, Date.class, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, Date.class, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="built_in">this</span>.strictInsertFill(metaObject, <span class="string">&quot;isDeleted&quot;</span>, Integer.class, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.strictUpdateFill(metaObject, <span class="string">&quot;updateTime&quot;</span>, Date.class, <span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Step3：简单测试一下。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动填充</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAutoFill</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="type">Users</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Users</span>();</span><br><span class="line">       user.setName(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">20</span>);</span><br><span class="line">       user.setEmail(<span class="string">&quot;tom@163.com&quot;</span>);</span><br><span class="line">       <span class="keyword">if</span> (usersService.save(user)) &#123;</span><br><span class="line">           usersService.list().forEach(System.out::println);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;添加数据失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逻辑删除</span></span><br><span class="line">   <span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (usersService.removeById(<span class="number">1444840211061186561L</span>)) &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;删除数据成功&quot;</span>);</span><br><span class="line">           usersService.list().forEach(System.out::println);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;删除数据失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">时间自动填充</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>验证码+登录</title>
    <link href="https://qiqicsdn.github.io/posts/14927b65.html"/>
    <id>https://qiqicsdn.github.io/posts/14927b65.html</id>
    <published>2023-12-07T13:09:32.014Z</published>
    <updated>2023-12-07T13:09:32.014Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实现vue验证码">实现vue验证码</h2><h3 id="前端：">前端：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login&quot;&gt;</span><br><span class="line">    &lt;el-form ref=&quot;loginForm&quot; :model=&quot;loginForm&quot; :rules=&quot;loginRules&quot; class=&quot;login-form&quot;&gt;</span><br><span class="line">      &lt;h3 class=&quot;title&quot;&gt;酒店后台管理系统&lt;/h3&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.username&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;账号&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;user&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.password&quot;</span><br><span class="line">          type=&quot;password&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;密码&quot;</span><br><span class="line">          @keyup.enter.native=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;password&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;code&quot; v-if=&quot;captchaEnabled&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.code&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;验证码&quot;</span><br><span class="line">          style=&quot;width: 63%&quot;</span><br><span class="line">          @keyup.enter.native=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;validCode&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">        &lt;div class=&quot;login-code&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;codeUrl&quot; @click=&quot;getCode&quot; class=&quot;login-code-img&quot;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-checkbox v-model=&quot;loginForm.rememberMe&quot; style=&quot;margin:0px 0px 25px 0px;&quot;&gt;记住密码&lt;/el-checkbox&gt;</span><br><span class="line">      &lt;el-form-item style=&quot;width:100%;&quot;&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          :loading=&quot;loading&quot;</span><br><span class="line">          size=&quot;medium&quot;</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;width:100%;&quot;</span><br><span class="line">          @click.native.prevent=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;span v-if=&quot;!loading&quot;&gt;登 录&lt;/span&gt;</span><br><span class="line">          &lt;span v-else&gt;登 录 中...&lt;/span&gt;</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">        &lt;div style=&quot;float: right;&quot; v-if=&quot;register&quot;&gt;</span><br><span class="line">          &lt;router-link class=&quot;link-type&quot; :to=&quot;&#x27;/register&#x27;&quot;&gt;立即注册&lt;/router-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;!--  底部  --&gt;</span><br><span class="line">    &lt;div class=&quot;el-login-footer&quot;&gt;</span><br><span class="line">      &lt;span&gt;Copyright © 2018-2022 ruoyi.vip All Rights Reserved.&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; getCodeImg &#125; from &quot;@/api/login&quot;;</span><br><span class="line">  import Cookies from &quot;js-cookie&quot;;</span><br><span class="line">  import &#123; encrypt, decrypt &#125; from &#x27;@/utils/jsencrypt&#x27;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &quot;Login&quot;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        codeUrl: &quot;&quot;,</span><br><span class="line">        loginForm: &#123;</span><br><span class="line">          username: &quot;admin&quot;,</span><br><span class="line">          password: &quot;admin123&quot;,</span><br><span class="line">          rememberMe: false,</span><br><span class="line">          code: &quot;&quot;,</span><br><span class="line">          uuid: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        loginRules: &#123;</span><br><span class="line">          username: [</span><br><span class="line">            &#123; required: true, trigger: &quot;blur&quot;, message: &quot;请输入您的账号&quot; &#125;</span><br><span class="line">          ],</span><br><span class="line">          password: [</span><br><span class="line">            &#123; required: true, trigger: &quot;blur&quot;, message: &quot;请输入您的密码&quot; &#125;</span><br><span class="line">          ],</span><br><span class="line">          code: [&#123; required: true, trigger: &quot;change&quot;, message: &quot;请输入验证码&quot; &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        loading: false,</span><br><span class="line">        // 验证码开关</span><br><span class="line">        captchaEnabled: false,</span><br><span class="line">        // 注册开关</span><br><span class="line">        register: true,</span><br><span class="line">        redirect: undefined</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      $route: &#123;</span><br><span class="line">        handler: function(route) &#123;</span><br><span class="line">          this.redirect = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">        &#125;,</span><br><span class="line">        immediate: true</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    created() &#123;</span><br><span class="line">      this.getCode();</span><br><span class="line">      this.getCookie();</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      getCode() &#123;</span><br><span class="line">        getCodeImg().then(res =&gt; &#123;</span><br><span class="line">          this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;</span><br><span class="line">          if (this.captchaEnabled) &#123;</span><br><span class="line">            this.codeUrl = &quot;data:image/gif;base64,&quot; + res.img;</span><br><span class="line">            this.loginForm.uuid = res.uuid;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      getCookie() &#123;</span><br><span class="line">        const username = Cookies.get(&quot;username&quot;);</span><br><span class="line">        const password = Cookies.get(&quot;password&quot;);</span><br><span class="line">        const rememberMe = Cookies.get(&#x27;rememberMe&#x27;)</span><br><span class="line">        this.loginForm = &#123;</span><br><span class="line">          username: username === undefined ? this.loginForm.username : username,</span><br><span class="line">          password: password === undefined ? this.loginForm.password : decrypt(password),</span><br><span class="line">          rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;,</span><br><span class="line">      handleLogin() &#123;</span><br><span class="line">        this.$refs.loginForm.validate(valid =&gt; &#123;</span><br><span class="line">          if (valid) &#123;</span><br><span class="line">            this.loading = true;</span><br><span class="line">            if (this.loginForm.rememberMe) &#123;</span><br><span class="line">              Cookies.set(&quot;username&quot;, this.loginForm.username, &#123; expires: 30 &#125;);</span><br><span class="line">              Cookies.set(&quot;password&quot;, encrypt(this.loginForm.password), &#123; expires: 30 &#125;);</span><br><span class="line">              Cookies.set(&#x27;rememberMe&#x27;, this.loginForm.rememberMe, &#123; expires: 30 &#125;);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              Cookies.remove(&quot;username&quot;);</span><br><span class="line">              Cookies.remove(&quot;password&quot;);</span><br><span class="line">              Cookies.remove(&#x27;rememberMe&#x27;);</span><br><span class="line">            &#125;</span><br><span class="line">            this.$store.dispatch(&quot;Login&quot;, this.loginForm).then(() =&gt; &#123;</span><br><span class="line">              this.$router.push(&#123; path: this.redirect || &quot;/&quot; &#125;).catch(()=&gt;&#123;&#125;);</span><br><span class="line">            &#125;).catch(() =&gt; &#123;</span><br><span class="line">              this.loading = false;</span><br><span class="line">              if (this.captchaEnabled) &#123;</span><br><span class="line">                this.getCode();</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style rel=&quot;stylesheet/scss&quot; lang=&quot;scss&quot;&gt;</span><br><span class="line">  .login &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">    align-items: center;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-image: url(&quot;../assets/images/login-background.jpg&quot;);</span><br><span class="line">    background-size: cover;</span><br><span class="line">  &#125;</span><br><span class="line">  .title &#123;</span><br><span class="line">    margin: 0px auto 30px auto;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #707070;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .login-form &#123;</span><br><span class="line">    border-radius: 6px;</span><br><span class="line">    background: #ffffff;</span><br><span class="line">    width: 400px;</span><br><span class="line">    padding: 25px 25px 5px 25px;</span><br><span class="line">    .el-input &#123;</span><br><span class="line">      height: 38px;</span><br><span class="line">      input &#123;</span><br><span class="line">        height: 38px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .input-icon &#123;</span><br><span class="line">      height: 39px;</span><br><span class="line">      width: 14px;</span><br><span class="line">      margin-left: 2px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .login-tip &#123;</span><br><span class="line">    font-size: 13px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #bfbfbf;</span><br><span class="line">  &#125;</span><br><span class="line">  .login-code &#123;</span><br><span class="line">    width: 33%;</span><br><span class="line">    height: 38px;</span><br><span class="line">    float: right;</span><br><span class="line">    img &#123;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      vertical-align: middle;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .el-login-footer &#123;</span><br><span class="line">    height: 40px;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    position: fixed;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #fff;</span><br><span class="line">    font-family: Arial;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    letter-spacing: 1px;</span><br><span class="line">  &#125;</span><br><span class="line">  .login-code-img &#123;</span><br><span class="line">    height: 38px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="后端：">后端：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.FastByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> com.google.code.kaptcha.Producer;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.config.RuoYiConfig;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.CacheConstants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.redis.RedisCache;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.sign.Base64;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.uuid.IdUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.service.ISysConfigService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码操作处理</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zwl</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CaptchaController</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Resource(name = &quot;captchaProducer&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Producer captchaProducer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;captchaProducerMath&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Producer captchaProducerMath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCache redisCache;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysConfigService configService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成验证码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/captchaImage&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResult <span class="title function_">getCode</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">captchaEnabled</span> <span class="operator">=</span> configService.selectCaptchaEnabled();</span><br><span class="line">        ajax.put(<span class="string">&quot;captchaEnabled&quot;</span>, captchaEnabled);</span><br><span class="line">        <span class="keyword">if</span> (!captchaEnabled)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ajax;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 保存验证码信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> IdUtils.simpleUUID();</span><br><span class="line">        <span class="type">String</span> <span class="variable">verifyKey</span> <span class="operator">=</span> CacheConstants.CAPTCHA_CODE_KEY + uuid;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">capStr</span> <span class="operator">=</span> <span class="literal">null</span>, code = <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 生成验证码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">captchaType</span> <span class="operator">=</span> RuoYiConfig.getCaptchaType();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;math&quot;</span>.equals(captchaType))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">capText</span> <span class="operator">=</span> captchaProducerMath.createText();</span><br><span class="line">            capStr = capText.substring(<span class="number">0</span>, capText.lastIndexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">            code = capText.substring(capText.lastIndexOf(<span class="string">&quot;@&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">            image = captchaProducerMath.createImage(capStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;char&quot;</span>.equals(captchaType))</span><br><span class="line">        &#123;</span><br><span class="line">            capStr = code = captchaProducer.createText();</span><br><span class="line">            image = captchaProducer.createImage(capStr);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);</span><br><span class="line">        <span class="comment">// 转换流信息写出</span></span><br><span class="line">        <span class="type">FastByteArrayOutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastByteArrayOutputStream</span>();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, os);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ajax.put(<span class="string">&quot;uuid&quot;</span>, uuid);</span><br><span class="line">        ajax.put(<span class="string">&quot;img&quot;</span>, Base64.encode(os.toByteArray()));</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现vue验证码-2">实现vue验证码</h2>]]></content>
    
    
    <summary type="html">验证码+登录</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>实现时间加减</title>
    <link href="https://qiqicsdn.github.io/posts/188f8d1d.html"/>
    <id>https://qiqicsdn.github.io/posts/188f8d1d.html</id>
    <published>2023-12-07T13:08:50.046Z</published>
    <updated>2023-12-07T13:08:50.046Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JAVA的时间加减">JAVA的时间加减</h2><h3 id="1-获取当前系统时间">1.获取当前系统时间</h3><blockquote><p>Date date = new Date();</p></blockquote><h3 id="2-实现时间的加减的两种方法">2.实现时间的加减的两种方法</h3><h4 id="第一种-用java-text-SimpleDateFormat来实现">第一种: 用java.text.<a href="https://so.csdn.net/so/search?q=SimpleDateFormat&amp;spm=1001.2101.3001.7020">SimpleDateFormat</a>来实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat df=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);  </span><br><span class="line">System.out.println(<span class="string">&quot;现在时间：&quot;</span>+df.format(date));  </span><br><span class="line">System.out.println(<span class="string">&quot;昨天该时间：&quot;</span> + df.format(<span class="keyword">new</span> <span class="title class_">Date</span>(date.getTime() - <span class="number">1</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>)));  </span><br><span class="line">System.out.println(<span class="string">&quot;明天该时间：&quot;</span> + df.format(<span class="keyword">new</span> <span class="title class_">Date</span>(date.getTime() + <span class="number">1</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>)));</span><br></pre></td></tr></table></figure><blockquote><p>获取当前毫秒值进行加减.</p></blockquote><h4 id="第二种-用java-util-Calender来实现">第二种:用java.util.Calender来实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Calendar</span> <span class="variable">calendar</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">calendar.setTime(date);<span class="comment">//设置起时间</span></span><br><span class="line">calendar.add(Calendar.YEAR, <span class="number">1</span>);<span class="comment">//增加一年</span></span><br><span class="line"><span class="comment">//calendar.add(Calendar.DATE, 1);//增加1天  </span></span><br><span class="line"><span class="comment">//calendar.add(Calendar.DATE, -1);//减1天  </span></span><br><span class="line"><span class="comment">//calendar.add(Calendar.MONTH, 1);//增加一个月   </span></span><br><span class="line">System.out.println(<span class="string">&quot;输出::&quot;</span>+calendar.getTime());</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">实现时间加减</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>数字换成自定义格式字符串</title>
    <link href="https://qiqicsdn.github.io/posts/e282dc36.html"/>
    <id>https://qiqicsdn.github.io/posts/e282dc36.html</id>
    <published>2023-12-07T13:07:34.789Z</published>
    <updated>2023-12-07T13:07:34.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java中MessageFormat自动将数字转换成自定格式的字符串">java中MessageFormat自动将数字转换成自定格式的字符串</h2><p><strong>如 45转化成 00045 同样可以转换时间</strong></p><p>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> MessageFormat.format(<span class="string">&quot;&#123;0,number,00000&#125;&quot;</span>, <span class="number">45</span>);</span><br><span class="line">System.out.println(str);<span class="comment">//结果就是00045</span></span><br><span class="line"></span><br><span class="line">System.out.println(MessageFormat.format(<span class="string">&quot;&#123;0,date,yyyy-MM-dd&#125;&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line"><span class="comment">//输出时间 2016-11-15 </span></span><br><span class="line"></span><br><span class="line">System.out.println(MessageFormat.format(<span class="string">&quot;&#123;0,date,yyyy-MM-dd HH:mm:ss&#125;&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line"><span class="comment">//输出时间 2016-11-15 15:16:14</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">数字换成自定义格式字符串</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>统一返回类</title>
    <link href="https://qiqicsdn.github.io/posts/798a5d1e.html"/>
    <id>https://qiqicsdn.github.io/posts/798a5d1e.html</id>
    <published>2023-12-07T13:06:40.350Z</published>
    <updated>2023-12-07T13:06:40.350Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Result类">Result类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span>&lt;T&gt; <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">3960261604605958516L</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line">  <span class="keyword">private</span> String msg;</span><br><span class="line">  <span class="keyword">private</span> T data;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// get set方法，限于篇幅问题，这里不写了，大家操作的时候自己生成一下。或者使用lombok</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功,默认状态码,返回消息,自定义返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 自定义返回数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;  返回类泛型,不能为String</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(data);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功,默认状态码,自定义返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 自定义返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(msg);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功,默认状态码,自定义返回消息,返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg  自定义返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 自定义返回数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;  返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">success</span><span class="params">(String msg, T data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(msg, data);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败,默认状态码,返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(ResultCode.ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败,默认状态码,自定义返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt; 返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(ResultCode.ERROR.getCode(), msg);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败,自定义状态码,返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 自定义状态码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg  自定义返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;  返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">error</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(code, msg);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 失败,使用CodeMsg状态码,返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultCode CodeMsg,参数如下:</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; code 状态码</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; msg  返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;        返回类泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 通用返回Result</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="title function_">error</span><span class="params">(ResultCode resultCode)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Result</span>&lt;&gt;(resultCode);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功构造器,无返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(ResultCode.SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功构造器,自定义返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(ResultCode.SUCCESS, data);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功构造器,自定义返回消息,无返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 返回消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(ResultCode.SUCCESS.getCode(), msg);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功构造器,自定义返回信息,返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg  返回信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(String msg, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(ResultCode.SUCCESS.getCode(), msg, data);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造器,自定义状态码,返回消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 状态码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg  返回消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造器,自定义状态码,返回消息,返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 状态码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg  返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data 返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(<span class="type">int</span> code, String msg, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(code, msg);</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造器,使用CodeMsg状态码与返回信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultCode CodeMsg,参数如下:</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; code 状态码</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; msg  返回消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(ResultCode resultCode)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(resultCode.getCode(), resultCode.getMsg());</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造器,使用CodeMsg状态码与返回信息,自定义返回数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> resultCode CodeMsg,参数如下:</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; code 状态码</span></span><br><span class="line"><span class="comment">     *                   &lt;p&gt; msg  返回消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data       返回数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">Result</span><span class="params">(ResultCode resultCode, T data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(resultCode);</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ResultCode类">ResultCode类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResultCode</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">6269841958947880397L</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">SUCCESS</span> <span class="operator">=</span> dispose(ResultCodeEnum.SUCCESS);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通用业务异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">BIZ_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.BIZ_ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件超出最大限制</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">FILE_OUT_MAX</span> <span class="operator">=</span> dispose(ResultCodeEnum.FILE_OUT_MAX);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件格式不正确</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">FILE_FORMAT_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.FILE_FORMAT_ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 参数错误</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">PARAM_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.PARAM_ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Json解析异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">JSON_FORMAT_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.JSON_FORMAT_ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Sql解析异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">SQL_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.SQL_ERROR);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 网络超时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">NETWORK_TIMEOUT</span> <span class="operator">=</span> dispose(ResultCodeEnum.NETWORK_TIMEOUT);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 未知的接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">UNKNOWN_INTERFACE</span> <span class="operator">=</span> dispose(ResultCodeEnum.UNKNOWN_INTERFACE);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 请求方式不支持</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">REQ_MODE_NOT_SUPPORTED</span> <span class="operator">=</span> dispose(ResultCodeEnum.REQ_MODE_NOT_SUPPORTED);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 系统异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">ResultCode</span> <span class="variable">SYS_ERROR</span> <span class="operator">=</span> dispose(ResultCodeEnum.SYS_ERROR);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ResultCode <span class="title function_">dispose</span><span class="params">(ResultCodeEnum codeEnum)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResultCode.builder().code(codeEnum.getCode()).msg(codeEnum.getMsg()).build();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ResultCode</span><span class="params">(<span class="type">int</span> code, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ResultCodeEnum类">ResultCodeEnum类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> 赵文龙</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2023/12/12 8:46</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Desc</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResultCodeEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2xx-成功</span></span><br><span class="line">    SUCCESS(<span class="number">200</span>, <span class="string">&quot;操作成功&quot;</span>),</span><br><span class="line">    <span class="comment">//4xx-客户端请求错误</span></span><br><span class="line">    PARAM_ERROR(<span class="number">400</span>, <span class="string">&quot;输入参数不合法&quot;</span>),</span><br><span class="line">    NO_LOGIN_AUTH(<span class="number">401</span>, <span class="string">&quot;请重新登录&quot;</span>),</span><br><span class="line">    NO_OPERATION_AUTH(<span class="number">402</span>, <span class="string">&quot;缺少操作权限&quot;</span>),</span><br><span class="line">    NO_DATA_AUTH(<span class="number">403</span>, <span class="string">&quot;缺少数据权限&quot;</span>),</span><br><span class="line">    ACCOUNT_ALREADY_EXISTS(<span class="number">405</span>, <span class="string">&quot;账号已存在&quot;</span>),</span><br><span class="line">    USER_NOT_LOGIN(<span class="number">406</span>, <span class="string">&quot;获取用户信息失败&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5xx-服务器错误</span></span><br><span class="line">    SYSTEM_ERROR(<span class="number">500</span>, <span class="string">&quot;系统异常&quot;</span>),</span><br><span class="line">    SYSTEM_BUSY_ERROR(<span class="number">501</span>, <span class="string">&quot;系统繁忙&quot;</span>),</span><br><span class="line"></span><br><span class="line">    SYSTEM_EM_ERROR(<span class="number">601</span>, <span class="string">&quot;连接影像系统异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    BIZ_ERROR(<span class="number">1000</span>, <span class="string">&quot;通用业务异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    FILE_OUT_MAX(<span class="number">9000</span>, <span class="string">&quot;文件超出最大限制&quot;</span>),</span><br><span class="line"></span><br><span class="line">    FILE_FORMAT_ERROR(<span class="number">9001</span>, <span class="string">&quot;文件格式不正确&quot;</span>),</span><br><span class="line"></span><br><span class="line">    JSON_FORMAT_ERROR(<span class="number">9051</span>, <span class="string">&quot;Json解析异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    SQL_ERROR(<span class="number">9052</span>, <span class="string">&quot;Sql解析异常&quot;</span>),</span><br><span class="line"></span><br><span class="line">    NETWORK_TIMEOUT(<span class="number">9510</span>, <span class="string">&quot;网络超时&quot;</span>),</span><br><span class="line"></span><br><span class="line">    UNKNOWN_INTERFACE(<span class="number">9520</span>, <span class="string">&quot;未知的接口&quot;</span>),</span><br><span class="line"></span><br><span class="line">    REQ_MODE_NOT_SUPPORTED(<span class="number">9530</span>, <span class="string">&quot;请求方式不支持&quot;</span>),</span><br><span class="line"></span><br><span class="line">    SYS_ERROR(<span class="number">9999</span>, <span class="string">&quot;系统异常&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ResultCodeEnum(<span class="type">int</span> code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">统一返回类</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>优化</title>
    <link href="https://qiqicsdn.github.io/posts/b0a72714.html"/>
    <id>https://qiqicsdn.github.io/posts/b0a72714.html</id>
    <published>2023-12-07T13:06:13.634Z</published>
    <updated>2023-12-07T13:06:13.634Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-使用Objects-equals比较对象">1. 使用Objects.equals比较对象</h2><p>这种方法相信大家并不陌生，甚至很多人都经常使用。是JDK7提供的一种方法，可以快速实现对象的比较，有效避免烦人的空指针检查。但是这种方法很容易用错，例如：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Long</span> <span class="string">longValue = 123L;</span></span><br><span class="line"><span class="attr">System.out.println(longValue</span>=<span class="string">=123); //true</span></span><br><span class="line"><span class="attr">System.out.println(Objects.equals(longValue,123));</span> <span class="string">//false</span></span><br></pre></td></tr></table></figure><p>为什么替换<code>==</code>为<code>Objects.equals()</code>会导致不同的结果？这是因为使用<code>==</code>编译器会得到封装类型对应的基本数据类型<code>longValue</code>，然后与这个基本数据类型进行比较，相当于编译器会自动将常量转换为比较基本数据类型, 而不是包装类型。<br>使用该<code>Objects.equals()</code>方法后，编译器默认常量的基本数据类型为<code>int</code>。下面是源码<code>Objects.equals()</code>，其中<code>a.equals(b)</code>使用的是<code>Long.equals()</code>会判断对象类型，因为编译器已经认为常量是<code>int</code>类型，所以比较结果一定是<code>false</code>。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">public</span> <span class="string">static boolean equals(Object a, Object b) &#123;</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">(a == b) || (a != null &amp;&amp; a.equals(b));</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">public</span> <span class="string">boolean equals(Object obj) &#123;</span></span><br><span class="line">    <span class="attr">if</span> <span class="string">(obj instanceof Long) &#123;</span></span><br><span class="line">        <span class="attr">return</span> <span class="string">value == ((Long)obj).longValue();</span></span><br><span class="line">    <span class="attr">&#125;</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">false;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p>知道了原因，解决方法就很简单了。直接声明常量的数据类型，如<code>Objects.equals(longValue,123L)</code>。其实如果逻辑严密，就不会出现上面的问题。我们需要做的是保持良好的编码习惯。</p><h2 id="2-日期格式错误">2. 日期格式错误</h2><p>在我们日常的开发中，经常需要对日期进行格式化，但是很多人使用的格式不对，导致出现意想不到的情况。请看下面的例子。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Instant</span> <span class="string">instant = Instant.parse(&quot;2021-12-31T00:00:00.00Z&quot;);</span></span><br><span class="line"><span class="attr">DateTimeFormatter</span> <span class="string">formatter = DateTimeFormatter.ofPattern(&quot;YYYY-MM-dd HH:mm:ss&quot;)</span></span><br><span class="line"><span class="attr">.withZone(ZoneId.systemDefault());</span></span><br><span class="line"><span class="attr">System.out.println(formatter.format(instant));//2022-12-31</span> <span class="string">08:00:00</span></span><br></pre></td></tr></table></figure><p>以上用于<code>YYYY-MM-dd</code>格式化, 年从<code>2021</code> 变成了 <code>2022</code>。为什么？这是因为 <code>java</code> 的<code>DateTimeFormatter</code> 模式<code>YYYY</code>和<code>yyyy</code>之间存在细微的差异。它们都代表一年，但是<code>yyyy</code>代表日历年，而<code>YYYY</code>代表星期。这是一个细微的差异，仅会导致一年左右的变更问题，因此您的代码本可以一直正常运行，而仅在新的一年中引发问题。12月31日按周计算的年份是2022年，正确的方式应该是使用<code>yyyy-MM-dd</code>格式化日期。<br>这个<code>bug</code>特别隐蔽。这在平时不会有问题。它只会在新的一年到来时触发。我公司就因为这个bug造成了生产事故。</p><h2 id="3-在-ThreadPool-中使用-ThreadLocal">3. 在 ThreadPool 中使用 ThreadLocal</h2><p>如果创建一个<code>ThreadLocal</code> 变量，访问该变量的线程将创建一个线程局部变量。合理使用<code>ThreadLocal</code>可以避免线程安全问题。<br>但是，如果在线程池中使用<code>ThreadLocal</code> ，就要小心了。您的代码可能会产生意想不到的结果。举个很简单的例子，假设我们有一个电商平台，用户购买商品后需要发邮件确认。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">private</span> <span class="string">ThreadLocal&lt;User&gt; currentUser = ThreadLocal.withInitial(() -&gt; null);</span></span><br><span class="line"></span><br><span class="line"><span class="attr">private</span> <span class="string">ExecutorService executorService = Executors.newFixedThreadPool(4);</span></span><br><span class="line"></span><br><span class="line"><span class="attr">public</span> <span class="string">void executor() &#123;</span></span><br><span class="line">    <span class="attr">executorService.submit(()-&gt;&#123;</span></span><br><span class="line">        <span class="attr">User</span> <span class="string">user = currentUser.get();</span></span><br><span class="line">        <span class="attr">Integer</span> <span class="string">userId = user.getId();</span></span><br><span class="line">        <span class="attr">sendEmail(userId);</span></span><br><span class="line">    <span class="attr">&#125;);</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure><p>如果我们使用<code>ThreadLocal</code>来保存用户信息，这里就会有一个隐藏的bug。因为使用了线程池，线程是可以复用的，所以在使用<code>ThreadLocal</code>获取用户信息的时候，很可能会误获取到别人的信息。您可以使用会话来解决这个问题。</p><h2 id="4-使用HashSet去除重复数据">4. 使用HashSet去除重复数据</h2><p>在编码的时候，我们经常会有去重的需求。一想到去重，很多人首先想到的就是用<code>HashSet</code>去重。但是，不小心使用 <code>HashSet</code> 可能会导致去重失败</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">User</span> <span class="string">user1 = new User();</span></span><br><span class="line"><span class="attr">user1.setUsername(&quot;test&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="attr">User</span> <span class="string">user2 = new User();</span></span><br><span class="line"><span class="attr">user2.setUsername(&quot;test&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="attr">List&lt;User&gt;</span> <span class="string">users = Arrays.asList(user1, user2);</span></span><br><span class="line"><span class="attr">HashSet&lt;User&gt;</span> <span class="string">sets = new HashSet&lt;&gt;(users);</span></span><br><span class="line"><span class="attr">System.out.println(sets.size());//</span> <span class="string">the size is 2</span></span><br></pre></td></tr></table></figure><p>细心的读者应该已经猜到失败的原因了。<code>HashSet</code>使用<code>hashcode</code>对哈希表进行寻址，使用<code>equals</code>方法判断对象是否相等。如果自定义对象没有重写<code>hashcode</code>方法和equals方法，则默认使用父对象的<code>hashcode</code>方法和<code>equals</code>方法。所以<code>HashSet</code>会认为这是两个不同的对象，所以导致去重失败。</p><h2 id="5-线程池中的异常被吃掉">5. 线程池中的异常被吃掉</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ExecutorService</span> <span class="string">executorService = Executors.newFixedThreadPool(1);</span></span><br><span class="line"><span class="attr">executorService.submit(()-&gt;&#123;</span></span><br><span class="line">    <span class="attr">//do</span> <span class="string">something</span></span><br><span class="line">    <span class="attr">double</span> <span class="string">result = 10/0;</span></span><br><span class="line"><span class="attr">&#125;);</span></span><br></pre></td></tr></table></figure><p>上面的代码模拟了一个线程池抛出异常的场景。我们真正的业务代码要处理各种可能出现的情况，所以很有可能因为某些特定的原因而触发<code>RuntimeException</code> 。<code>手动</code><br>但是如果没有特殊处理，这个异常就会被线程池吃掉。这样就会导出出现问题你都不知道，这是很严重的后果。因此，最好在线程池中<code>try catch</code>捕获异常。<br>链接：<a href="https://juejin.cn/post/7182184496517611576">https://juejin.cn/post/7182184496517611576</a></p>]]></content>
    
    
    <summary type="html">优化</summary>
    
    
    
    <category term="Note" scheme="https://qiqicsdn.github.io/categories/Note/"/>
    
    
    <category term="笔记" scheme="https://qiqicsdn.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
